"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[2241],{6860:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var t=i(5893),l=i(1151);const r={identifier:"1165",closedAt:null,mergedAt:null,title:"Add Transitional Non-Null appendix (`@noPropagate` directive)",stage:"0",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1165",events:[{type:"prCreated",date:new Date("2025-04-30T16:44:30.000Z"),href:"https://github.com/graphql/graphql-spec/pull/1165",actor:"benjie"},{type:"commitsPushed",date:new Date("2025-04-30T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/1666d2e778be581ba171152a1baad6c4bfc7c5f3",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/1666d2e778be581ba171152a1baad6c4bfc7c5f3",headline:"Add Transitional Non-Null to the appendix",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/26872eaab8d64cb17e67bd5158bfa6ea25ce14e0",headline:"Tweaks",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/3c8a3c14102be346d590191922c34f4d683383da",headline:"Revise first paragraph",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/ab61cd71fdfa2ec78a6622e44181c4d8d809837a",headline:"Overhaul overview",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/872d58a34b04bba5dffdd9278f3848c25a5c4453",headline:"Tweak titles",ghUser:"benjie",authorName:"Benjie Gillam"}]}],related:"SemanticNullability",shortname:"Add Transitional Non-Null appendix (`@noPropagate` directive)",image:"/img/rfc_tracker.png"},a=void 0,s={id:"1165",title:"Add Transitional Non-Null appendix (`@noPropagate` directive)",description:"At a glance",source:"@site/rfcs/1165.md",sourceDirName:".",slug:"/1165",permalink:"/rfcs/1165",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"1165",closedAt:null,mergedAt:null,title:"Add Transitional Non-Null appendix (`@noPropagate` directive)",stage:"0",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1165",events:[{type:"prCreated",date:"2025-04-30T16:44:30.000Z",href:"https://github.com/graphql/graphql-spec/pull/1165",actor:"benjie"},{type:"commitsPushed",date:"2025-04-30T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/1666d2e778be581ba171152a1baad6c4bfc7c5f3",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/1666d2e778be581ba171152a1baad6c4bfc7c5f3",headline:"Add Transitional Non-Null to the appendix",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/26872eaab8d64cb17e67bd5158bfa6ea25ce14e0",headline:"Tweaks",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/3c8a3c14102be346d590191922c34f4d683383da",headline:"Revise first paragraph",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/ab61cd71fdfa2ec78a6622e44181c4d8d809837a",headline:"Overhaul overview",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/872d58a34b04bba5dffdd9278f3848c25a5c4453",headline:"Tweak titles",ghUser:"benjie",authorName:"Benjie Gillam"}]}],related:"SemanticNullability",shortname:"Add Transitional Non-Null appendix (`@noPropagate` directive)",image:"/img/rfc_tracker.png"},sidebar:"rfcsSidebar",previous:{title:"Semantic Nullability",permalink:"/rfcs/SemanticNullability"},next:{title:"Field Extensions",permalink:"/rfcs/FieldExtensions"}},o={},c=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",section:"section",strong:"strong",sup:"sup",ul:"ul",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Identifier"}),": #1165"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stage"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-0-strawman",children:"RFC0: Strawman"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Champion"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PR"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/pull/1165",children:"Add Transitional Non-Null appendix (`@noPropagate` directive)"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Related"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/rfcs/SemanticNullability",title:"Semantic Nullability / RFC0",children:"SemanticNullability"})," (Semantic Nullability)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"timeline",children:"Timeline"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/pull/1165",children:"Spec PR"})," created"]})," on 2025-04-30 by benjie"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"5 commits pushed"})," on 2025-04-30:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/commit/1666d2e778be581ba171152a1baad6c4bfc7c5f3",children:"Add Transitional Non-Null to the appendix"})," by ",(0,t.jsx)(n.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/commit/26872eaab8d64cb17e67bd5158bfa6ea25ce14e0",children:"Tweaks"})," by ",(0,t.jsx)(n.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/commit/3c8a3c14102be346d590191922c34f4d683383da",children:"Revise first paragraph"})," by ",(0,t.jsx)(n.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/commit/ab61cd71fdfa2ec78a6622e44181c4d8d809837a",children:"Overhaul overview"})," by ",(0,t.jsx)(n.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/commit/872d58a34b04bba5dffdd9278f3848c25a5c4453",children:"Tweak titles"})," by ",(0,t.jsx)(n.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["This is essentially solution 8 to the ",(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/rfcs/SemanticNullability.md",children:"Semantic Nullability RFC"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Enables ",(0,t.jsx)(n.strong,{children:"semantic nullability"})," to be reflected in schemas without breaking legacy behavior."]}),"\n",(0,t.jsxs)(n.li,{children:["Facilitates ",(0,t.jsx)(n.strong,{children:"incremental adoption"})," of modern error handling without requiring disruptive changes."]}),"\n",(0,t.jsxs)(n.li,{children:["Requires ",(0,t.jsx)(n.strong,{children:"minimal spec impact"})," and is fully optional for implementations."]}),"\n",(0,t.jsxs)(n.li,{children:["Reflects ",(0,t.jsx)(n.strong,{children:"transitional nature"})," of this change in behavior"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"I've based it on:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"#1163"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["since, like all solutions to the semantic nullability problem",(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),", it is designed to enable clients with error propagation disabled to leverage the true nullability of the underlying data without breaking legacy clients. The approach could be rebuilt atop an alternative method of toggling error propagation, for example a directive-based approach."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"This PR introduces an appendix to the GraphQL specification defining an optional solution to the semantic nullability problem using the following key mechanisms:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"@noPropagate"}),(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-2",id:"user-content-fnref-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})})," directive"]})," \u2014 allows schema authors to annotate ",(0,t.jsx)(n.code,{children:"Non-Null"})," return types as ",(0,t.jsx)(n.em,{children:"transitional"}),", suppressing propagation but preserving runtime error generation."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Transitional Non-Null semantics"})," \u2014 errors at these positions behave like nullable fields in terms of (no!) propagation but like non-nullable fields in value completion (error on null)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["New ",(0,t.jsx)(n.code,{children:"__Field.noPropagateLevels: [Int!]"})," field"]})," \u2014 exposes transitional status to modern clients."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Transitional non-null hidden from legacy clients"})," \u2014 tooling using the legacy ",(0,t.jsx)(n.code,{children:"PROPAGATE"})," ",(0,t.jsx)(n.em,{children:"error behavior"})," will get results from ",(0,t.jsx)(n.code,{children:"__Field.type"})," that unwrap transitional non-null types.",(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-3",id:"user-content-fnref-3","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"3"})})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This solution attempts to address all of the feedback on previous solutions to this problem, whilst being explicitly transitional. It:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Is optional: explicitly only for schemas supporting legacy clients"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Requires no changes to the main spec text"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Introduces no new syntax"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["True to its name: an error here will not propagate (",(0,t.jsx)(n.code,{children:"@noPropagate"}),"), regardless of whether error propagation is enabled or disabled."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Maintains introspection results for existing (deployed) clients and tooling"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Maintains error boundaries for existing (deployed) clients"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Allows all new schemas and new fields to use ",(0,t.jsx)(n.code,{children:"!"})," (non-null) directly for semantically non-null positions"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Allows existing fields to use ",(0,t.jsx)(n.code,{children:"!"})," (non-null) for error handling clients without breaking legacy clients by adding the ",(0,t.jsx)(n.code,{children:"@noPropagate"})," directive",(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-4",id:"user-content-fnref-4","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"4"})})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Can be adopted gradually, field-by-field, or en masse by applying ",(0,t.jsx)(n.code,{children:"@noPropagate"})," to all nullable positions."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Can be removed from each field the moment no legacy clients query it"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,t.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{id:"user-content-fn-1",children:["\n",(0,t.jsxs)(n.p,{children:["Except solution 5 ",(0,t.jsx)(n.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{id:"user-content-fn-2",children:["\n",(0,t.jsxs)(n.p,{children:["This is essentially the same as the ",(0,t.jsx)(n.code,{children:"@semanticNonNull"})," directive, but more strictly defined and reflected through introspection. ",(0,t.jsx)(n.a,{href:"#user-content-fnref-2","data-footnote-backref":"","aria-label":"Back to reference 2",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{id:"user-content-fn-3",children:["\n",(0,t.jsxs)(n.p,{children:["This may be controversial, but I truly think it's the right decision. All new tooling (and all new clients!) should use ",(0,t.jsx)(n.code,{children:"onError: ABORT"})," or ",(0,t.jsx)(n.code,{children:"onError: NO_PROPAGATE"}),", and thus will see the true introspection. Existing tooling doesn't know about ",(0,t.jsx)(n.code,{children:"onError"}),' and so should not see these "transitional" non-null types. ',(0,t.jsx)(n.a,{href:"#user-content-fnref-3","data-footnote-backref":"","aria-label":"Back to reference 3",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{id:"user-content-fn-4",children:["\n",(0,t.jsxs)(n.p,{children:["And if you forget to add it, adding it later is only a potentially breaking change for any new versions of legacy clients deployed since the change; error-handling clients (",(0,t.jsx)(n.code,{children:"NO_PROPAGATE"})," or ",(0,t.jsx)(n.code,{children:"ABORT"}),") are unimpacted. ",(0,t.jsx)(n.a,{href:"#user-content-fnref-4","data-footnote-backref":"","aria-label":"Back to reference 4",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>s,a:()=>a});var t=i(7294);const l={},r=t.createContext(l);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);