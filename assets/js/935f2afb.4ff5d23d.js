"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"link","label":"about:benjie","href":"/","docId":"index","unlisted":false},{"type":"category","label":"GraphQL","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"GraphQL Security","href":"/graphql/security","docId":"graphql/security","unlisted":false},{"type":"link","label":"Trusted Documents","href":"/graphql/trusted-documents","docId":"graphql/trusted-documents","unlisted":false},{"type":"link","label":"Static Documents","href":"/graphql/static-documents","docId":"graphql/static-documents","unlisted":false},{"type":"link","label":"Naming Conventions","href":"/graphql/naming","docId":"graphql/naming","unlisted":false},{"type":"link","label":"Nullability","href":"/graphql/nullability","docId":"graphql/nullability","unlisted":false},{"type":"link","label":"Nested Mutations","href":"/graphql/nested-mutations","docId":"graphql/nested-mutations","unlisted":false},{"type":"link","label":"Graph Traversal","href":"/graphql/traversal","docId":"graphql/traversal","unlisted":false},{"type":"link","label":"Normalized Stores","href":"/graphql/normalized","docId":"graphql/normalized","unlisted":false},{"type":"link","label":"Referencing Ancestors","href":"/graphql/ancestors","docId":"graphql/ancestors","unlisted":false}],"href":"/graphql/"},{"type":"category","label":"Talks","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Techniques to Protect Your GraphQL API","href":"/talks/techniques-to-protect","docId":"talks/techniques-to-protect","unlisted":false}],"href":"/talks/"},{"type":"category","label":"Linux","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Dual boot bluetooth pairing","href":"/linux/bluetooth-dual-boot","docId":"linux/bluetooth-dual-boot","unlisted":false}],"href":"/linux/"}]},"docs":{"graphql/ancestors":{"id":"graphql/ancestors","title":"Referencing Ancestors","description":"Filtering by or comparing against ancestor objects in a field.","sidebar":"defaultSidebar"},"graphql/index":{"id":"graphql/index","title":"GraphQL","description":"Check out the GraphQL Spec RFC tracker!","sidebar":"defaultSidebar"},"graphql/naming":{"id":"graphql/naming","title":"Naming Conventions","description":"Benjie\'s researched opinion on GraphQL naming","sidebar":"defaultSidebar"},"graphql/nested-mutations":{"id":"graphql/nested-mutations","title":"Nested Mutations","description":"NO!","sidebar":"defaultSidebar"},"graphql/normalized":{"id":"graphql/normalized","title":"Normalized Stores","description":"Rendering consistent data across your application","sidebar":"defaultSidebar"},"graphql/nullability":{"id":"graphql/nullability","title":"Nullability","description":"The past and future of GraphQL nullability, according to Benjie","sidebar":"defaultSidebar"},"graphql/security":{"id":"graphql/security","title":"GraphQL Security","description":"Techniques to protect your GraphQL API.","sidebar":"defaultSidebar"},"graphql/static-documents":{"id":"graphql/static-documents","title":"Static Documents","description":"Best practices dictate that you should not generate GraphQL documents dynamically, instead they should be hardcoded into your applications and variables should be supplied to specify dynamic parameters.","sidebar":"defaultSidebar"},"graphql/traversal":{"id":"graphql/traversal","title":"Graph Traversal","description":"The origin of the \'graph\' in \'GraphQL\', and why it\'s important","sidebar":"defaultSidebar"},"graphql/trusted-documents":{"id":"graphql/trusted-documents","title":"Trusted Documents","description":"A standard way to prevent malicious GraphQL documents being issued to a GraphQL endpoint by only allowing documents that you trust (written by your developers, passing your CI checks, etc).\\nAt client build time, make the documents available to the server and receive an identifier for each; at run time issue this identifier to the server and have it look up the associated document.","sidebar":"defaultSidebar"},"index":{"id":"index","title":"about:benjie","description":"<img","sidebar":"defaultSidebar"},"linux/bluetooth-dual-boot":{"id":"linux/bluetooth-dual-boot","title":"Dual boot bluetooth pairing","description":"You have great bluetooth headphones... You have a dual boot Windows/Linux","sidebar":"defaultSidebar"},"linux/index":{"id":"linux/index","title":"Linux","description":"I\'ve been a GNU/Linux user since \'99; though most weeks I use all three main","sidebar":"defaultSidebar"},"talks/index":{"id":"talks/index","title":"Talks","description":"TODO: I\'ve spoken at a lot of conferences and meetups over the years... I should probably list them out here.","sidebar":"defaultSidebar"},"talks/techniques-to-protect":{"id":"talks/techniques-to-protect","title":"Techniques to Protect Your GraphQL API","description":"First presented at GraphQLConf 2024 in San Francisco.","sidebar":"defaultSidebar"}}}')}}]);