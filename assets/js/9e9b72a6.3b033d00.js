"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[3564],{1613:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>h,contentTitle:()=>i,default:()=>o,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var r=a(5893),t=a(1151);const l={identifier:"1056",title:"Fix CoerceArgumentValues() hasValue",stage:"1",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1056",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/01-Jan/09-wg-primary.md",date:new Date("2025-01-09T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2025/2025-01.md",date:"2025-01",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2024/12-Dec/05-wg-primary.md",date:new Date("2024-12-05T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2024/2024-12.md",date:"2024-12",actor:null},{type:"commitsPushed",date:new Date("2024-11-28T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/47e49041ebcadf43392100ee2c9a8b6ed4ac51e4",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/47e49041ebcadf43392100ee2c9a8b6ed4ac51e4",headline:"Add a period",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/12-Dec/07-wg-primary.md",date:new Date("2023-12-07T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-12.md",date:"2023-12",actor:null},{type:"prCreated",date:new Date("2023-11-09T14:56:50.000Z"),href:"https://github.com/graphql/graphql-spec/pull/1056",actor:"benjie"},{type:"commitsPushed",date:new Date("2023-11-09T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/6f7541f2934a1ed15d76bb8d9364d9791f83b66b",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/6f7541f2934a1ed15d76bb8d9364d9791f83b66b",headline:"Fix CoerceArgumentValues() hasValue",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"Fix CoerceArgumentValues() hasValue",image:"/img/rfc_tracker.png",nextStage:!0},i=void 0,s={id:"1056",title:"Fix CoerceArgumentValues() hasValue",description:"At a glance",source:"@site/rfcs/1056.md",sourceDirName:".",slug:"/1056",permalink:"/rfcs/1056",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"1056",title:"Fix CoerceArgumentValues() hasValue",stage:"1",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1056",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/01-Jan/09-wg-primary.md",date:"2025-01-09T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2025/2025-01.md",date:"2025-01",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2024/12-Dec/05-wg-primary.md",date:"2024-12-05T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2024/2024-12.md",date:"2024-12",actor:null},{type:"commitsPushed",date:"2024-11-28T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/47e49041ebcadf43392100ee2c9a8b6ed4ac51e4",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/47e49041ebcadf43392100ee2c9a8b6ed4ac51e4",headline:"Add a period",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/12-Dec/07-wg-primary.md",date:"2023-12-07T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-12.md",date:"2023-12",actor:null},{type:"prCreated",date:"2023-11-09T14:56:50.000Z",href:"https://github.com/graphql/graphql-spec/pull/1056",actor:"benjie"},{type:"commitsPushed",date:"2023-11-09T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/6f7541f2934a1ed15d76bb8d9364d9791f83b66b",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/6f7541f2934a1ed15d76bb8d9364d9791f83b66b",headline:"Fix CoerceArgumentValues() hasValue",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"Fix CoerceArgumentValues() hasValue",image:"/img/rfc_tracker.png",nextStage:!0},sidebar:"rfcsSidebar",previous:{title:"List coercion algorithm",permalink:"/rfcs/1058"},next:{title:"Expand @deprecated to Objects",permalink:"/rfcs/997"}},h={},c=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Identifier"}),": #1056"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stage"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-1-proposal",children:"RFC1: Proposal"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Champion"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PR"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/pull/1056",children:"Fix CoerceArgumentValues() hasValue"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"timeline",children:"Timeline"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Added to ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/01-Jan/09-wg-primary.md",children:"2025-01-09 WG agenda"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Mentioned in ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2025/2025-01.md",children:"2025-01 WG notes"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Added to ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2024/12-Dec/05-wg-primary.md",children:"2024-12-05 WG agenda"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Mentioned in ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2024/2024-12.md",children:"2024-12 WG notes"})]})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Commit pushed"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/commit/47e49041ebcadf43392100ee2c9a8b6ed4ac51e4",children:"Add a period"})," on 2024-11-28 by ",(0,r.jsx)(n.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Added to ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/12-Dec/07-wg-primary.md",children:"2023-12-07 WG agenda"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Mentioned in ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-12.md",children:"2023-12 WG notes"})]})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/pull/1056",children:"Spec PR"})," created"]})," on 2023-11-09 by benjie"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Commit pushed"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/commit/6f7541f2934a1ed15d76bb8d9364d9791f83b66b",children:"Fix CoerceArgumentValues() hasValue"})," on 2023-11-09 by ",(0,r.jsx)(n.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Fixes a bug discovered whilst carefully evaluating ",(0,r.jsx)(n.code,{children:"CoerceArgumentValues()"}),' that leads to "undefined value leakage" and potential null pointer exception if strictly following the spec. GraphQL.js does ',(0,r.jsx)(n.strong,{children:"not"})," suffer this, so this is a spec bug rather than an implementation bug."]}),"\n",(0,r.jsx)(n.p,{children:"Consider the following schema:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'type Query {\n  field(arg: String! = "defaultValue"): String\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"And the following GraphQL query:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"query ($var: String) {\n  field(arg: $var)\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Imagine that we send an empty object (",(0,r.jsx)(n.code,{children:"{}"}),") as the variable values."]}),"\n",(0,r.jsxs)(n.p,{children:["Coercing the variableValues according to ",(0,r.jsx)(n.a,{href:"https://spec.graphql.org/draft/#CoerceVariableValues()",children:"https://spec.graphql.org/draft/#CoerceVariableValues()"})," we get an empty object (",(0,r.jsx)(n.code,{children:"{}"}),")."]}),"\n",(0,r.jsxs)(n.p,{children:["Fast-forward to ",(0,r.jsx)(n.a,{href:"https://spec.graphql.org/draft/#CoerceArgumentValues()",children:"https://spec.graphql.org/draft/#CoerceArgumentValues()"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Let {coercedValues} be an empty unordered Map. ",(0,r.jsx)(n.code,{children:"coercedValues = {}"})]}),"\n",(0,r.jsxs)(n.li,{children:["Let {argumentValues} be the argument values provided in {field}. ",(0,r.jsx)(n.code,{children:"argumentValues = { arg: $var }"})]}),"\n",(0,r.jsxs)(n.li,{children:["Let {fieldName} be the name of {field}. ",(0,r.jsx)(n.code,{children:"fieldName = 'field'"})]}),"\n",(0,r.jsxs)(n.li,{children:["Let {argumentDefinitions} be the arguments defined by {objectType} for the\nfield named {fieldName}. ",(0,r.jsx)(n.code,{children:'argumentDefinitions = { arg: String! = "defaultValue" }'})]}),"\n",(0,r.jsxs)(n.li,{children:["For each {argumentDefinition} in {argumentDefinitions}:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Let {argumentName} be the name of {argumentDefinition}. ",(0,r.jsx)(n.code,{children:"argumentName = 'arg'"})]}),"\n",(0,r.jsxs)(n.li,{children:["Let {argumentType} be the expected type of {argumentDefinition}. ",(0,r.jsx)(n.code,{children:"argumentType = String!"})]}),"\n",(0,r.jsxs)(n.li,{children:["Let {defaultValue} be the default value for {argumentDefinition}. ",(0,r.jsx)(n.code,{children:"defaultValue = 'defaultValue'"})]}),"\n",(0,r.jsxs)(n.li,{children:["Let {hasValue} be {true} if {argumentValues} provides a value for the name\n{argumentName}. ","\ud83d\udc1b"," ",(0,r.jsx)(n.strong,{children:"!!!BUG!!!"})," ",(0,r.jsx)(n.code,{children:"hasValue = true"})," because ",(0,r.jsx)(n.code,{children:"argumentValues"})," does provide the variable ",(0,r.jsx)(n.code,{children:"$var"})," as the value for the argument 'arg'"]}),"\n",(0,r.jsxs)(n.li,{children:["Let {argumentValue} be the value provided in {argumentValues} for the name\n{argumentName}. ",(0,r.jsx)(n.code,{children:"argumentValue = $var"})]}),"\n",(0,r.jsxs)(n.li,{children:["If {argumentValue} is a {Variable}: ",(0,r.jsx)(n.code,{children:"Yes, $var is a variable"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Let {variableName} be the name of {argumentValue}. ",(0,r.jsx)(n.code,{children:"variableName = 'var'"})]}),"\n",(0,r.jsxs)(n.li,{children:["Let {hasValue} be {true} if {variableValues} provides a value for the name\n{variableName}. ","\ud83d\udc1b"," ",(0,r.jsx)(n.strong,{children:"!!!BUG!!!"})," This does ",(0,r.jsx)(n.em,{children:"not"})," fire, but ",(0,r.jsx)(n.code,{children:"hasValue"})," is ",(0,r.jsx)(n.em,{children:"already"})," {true} by the above."]}),"\n",(0,r.jsxs)(n.li,{children:["Let {value} be the value provided in {variableValues} for the name\n{variableName}. ","\ud83d\udc1b"," ",(0,r.jsx)(n.strong,{children:"!!!BUG!!!"})," ",(0,r.jsx)(n.code,{children:"value = undefined"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Otherwise, let\u200b {value} be {argumentValue}. ",(0,r.jsx)(n.code,{children:"NOT TRIGGERED"})]}),"\n",(0,r.jsxs)(n.li,{children:["If {hasValue} is not {true} and {defaultValue} exists (including {null}):  ",(0,r.jsx)(n.code,{children:"NOT TRIGGERED"})," since hasValue is true","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add an entry to {coercedValues} named {argumentName} with the value\n{defaultValue}."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Otherwise if {argumentType} is a Non-Nullable type, and either {hasValue} is\nnot {true} or {value} is {null}, raise a ",(0,r.jsx)(n.em,{children:"field error"}),".  ",(0,r.jsx)(n.code,{children:"NOT TRIGGERED"})," because ",(0,r.jsx)(n.code,{children:"hasValue"})," is {true} and value is not {null} (it is undefined!)"]}),"\n",(0,r.jsxs)(n.li,{children:["Otherwise if {hasValue} is true: ",(0,r.jsx)(n.code,{children:"Yes, it is"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If {value} is {null}: ",(0,r.jsx)(n.code,{children:"It is not, it is undefined"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add an entry to {coercedValues} named {argumentName} with the value\n{null}."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Otherwise, if {argumentValue} is a {Variable}: ",(0,r.jsx)(n.code,{children:"It is!"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Add an entry to {coercedValues} named {argumentName} with the value\n{value}. ",(0,r.jsx)(n.code,{children:"coercedValues[argumentName] = undefined"})," (since ",(0,r.jsx)(n.code,{children:"value"})," is undefined)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Otherwise:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If {value} cannot be coerced according to the input coercion rules of\n{argumentType}, raise a ",(0,r.jsx)(n.em,{children:"field error"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Let {coercedValue} be the result of coercing {value} according to the\ninput coercion rules of {argumentType}."}),"\n",(0,r.jsx)(n.li,{children:"Add an entry to {coercedValues} named {argumentName} with the value\n{coercedValue}."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Return {coercedValues}."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Expectation: ",(0,r.jsx)(n.code,{children:'coercedValues = { arg: "defaultValue" }'}),"\nActual result: ",(0,r.jsx)(n.code,{children:"coercedValues = { arg: undefined }"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"arg"})," is non-null string -> NPE! ","\ud83d\udca5"]}),"\n",(0,r.jsx)(n.p,{children:'Essentially the phrase "Let {hasValue} be {true} if {argumentValues} provides a value for the name {argumentName}" is at best ambiguous and at worst plain wrong, since the next two lines get the "value" for {argumentName} and then check to see if this {value} is a variable.'}),"\n",(0,r.jsxs)(n.p,{children:["This PR fixes this issue by only setting ",(0,r.jsx)(n.code,{children:"hasValue"})," to ",(0,r.jsx)(n.code,{children:"true"})," when the value is explicitly resolved via the two branches: variable and non-variable."]}),"\n",(0,r.jsx)(n.p,{children:"There is no need for a GraphQL.js PR for this since GraphQL.js already follows the expected behavior; reproduction:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { GraphQLNonNull, GraphQLObjectType, GraphQLSchema, GraphQLString, graphqlSync, printSchema, validateSchema } from "graphql";\n\nconst Query = new GraphQLObjectType({\n  name: "Query",\n  fields: {\n    field: {\n      args: {\n        arg: {\n          type: new GraphQLNonNull(GraphQLString),\n          defaultValue: "defaultValue",\n        },\n      },\n      type: GraphQLString,\n      resolve(_, { arg }) {\n        return arg;\n      },\n    },\n  },\n});\n\nconst schema = new GraphQLSchema({\n  query: Query,\n});\n\nconst result = graphqlSync({\n  schema,\n  source: /* GraphQL */ `\n    query ($var: String) {\n      field(arg: $var)\n    }\n  `,\n  variables: {\n    /* EXPLICITLY DO NOT PASS "var" */\n  },\n});\n\nconst errors = validateSchema(schema);\nif (errors.length) {\n  console.dir(errors);\n  process.exit(1);\n}\n\nconsole.log(printSchema(schema));\nconsole.log(JSON.stringify(result, null, 2));\n'})}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>s,a:()=>i});var r=a(7294);const t={},l=r.createContext(t);function i(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);