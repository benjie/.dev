"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[995],{4902:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=n(5893),i=n(1151),o=n(4664);const r={type:"page",title:"Nested Mutations",description:"NO!",tag:"graphql",author:"Benjie",toc:!1,sidebar_position:3},a='"GraphQL" Nested Mutations',l={id:"graphql/nested-mutations",title:"Nested Mutations",description:"NO!",source:"@site/pages/graphql/nested-mutations.mdx",sourceDirName:"graphql",slug:"/graphql/nested-mutations",permalink:"/graphql/nested-mutations",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{type:"page",title:"Nested Mutations",description:"NO!",tag:"graphql",author:"Benjie",toc:!1,sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Naming Conventions",permalink:"/graphql/naming"},next:{title:"Graph Traversal",permalink:"/graphql/traversal"}},h={},c=[{value:"<span>\ud83d\uded1 NO! \u26d4</span>",id:"-no-",level:3}];function d(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",em:"em",h1:"h1",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"graphql-nested-mutations",children:'"GraphQL" Nested Mutations'}),"\n",(0,s.jsx)(t.h3,{id:"-no-",children:(0,s.jsx)("span",{style:{fontSize:"8rem"},children:"\ud83d\uded1 NO! \u26d4"})}),"\n",(0,s.jsx)(o.Z,{children:(0,s.jsxs)(t.p,{children:['a schema using "nested mutations" ',(0,s.jsx)(t.strong,{children:"is not a GraphQL schema"})]})}),"\n",(0,s.jsx)(t.p,{children:'"Nested mutations" is the practice of performing side-effects in child fields of\nthe mutation fields. This is explicitly forbidden by the GraphQL spec:'}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"the resolution of fields other than top-level mutation fields must always be\nside effect-free and idempotent"}),"\n",(0,s.jsxs)(t.p,{children:["\u2014 ",(0,s.jsx)(t.a,{href:"https://spec.graphql.org/draft/#sel-GANRNDABiEBuHxyV",children:"https://spec.graphql.org/draft/#sel-GANRNDABiEBuHxyV"})]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:['Therefore, a schema using "nested mutations" ',(0,s.jsx)(t.strong,{children:"is not a GraphQL schema"})," \u2014\nit does not comply with the GraphQL specification."]}),"\n",(0,s.jsx)(t.p,{children:"There's a number of reasons for this, but the most convincing one for me is that\nGraphQL is client-focussed and it's important for clients to have a mental model\nof what the server will do. If the server might perform mutations/side-effects\nanywhere then the client can't safely cache anything. However, if the client\nknows that mutations/side-effects only happen in specific locations (currently\nonly in root-level mutation fields) then it can use this knowledge to factor\ninto its caching and re-rendering strategies."}),"\n",(0,s.jsx)(t.p,{children:"There are some RFCs proposed to address some of the desires behind nested\nmutations:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/issues/252",children:"Serial fields"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/issues/163",children:"Namespaces"})}),"\n"]}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsxs)(t.p,{children:['The term "nested mutations" has also been used by some people to describe the\npractice where a single mutation field accepts as input a nested tree of\n(possibly lists of) input objects which define the mutations to occur. All\nmutations still happen within this single root-level Mutation field, and thus\nthis pattern ',(0,s.jsx)(t.em,{children:"is"})," valid GraphQL (and is not the subject of this article)."]}),(0,s.jsx)(t.p,{children:'A better name for this pattern might be "mutation" or "mutation with nested\ninput objects".'})]})]})}function p(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4664:(e,t,n)=>{n.d(t,{Z:()=>o});n(7294);const s="pullquote_fEhA";var i=n(5893);const o=e=>{let{children:t}=e;return(0,i.jsx)("aside",{className:s,children:(0,i.jsx)("blockquote",{children:t})})}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>r});var s=n(7294);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);