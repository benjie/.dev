"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[9946],{3676:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var t=r(5893),a=r(1151),i=r(768);r(4664);const o={type:"page",title:"Graph Traversal",description:"The origin of the 'graph' in 'GraphQL', and why it's important",tag:"graphql",author:"Benjie",breadcrumb:!1,sidebar_position:50},s="Graph Traversal",l={id:"graphql/traversal",title:"Graph Traversal",description:"The origin of the 'graph' in 'GraphQL', and why it's important",source:"@site/pages/graphql/traversal.mdx",sourceDirName:"graphql",slug:"/graphql/traversal",permalink:"/graphql/traversal",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:50,frontMatter:{type:"page",title:"Graph Traversal",description:"The origin of the 'graph' in 'GraphQL', and why it's important",tag:"graphql",author:"Benjie",breadcrumb:!1,sidebar_position:50},sidebar:"defaultSidebar",previous:{title:"Nested Mutations",permalink:"/graphql/nested-mutations"},next:{title:"Normalized Stores",permalink:"/graphql/normalized"}},h={},d=[{value:"Graph overview",id:"graph-overview",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",mermaid:"mermaid",p:"p",strong:"strong",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"graph-traversal",children:"Graph Traversal"}),"\n",(0,t.jsx)(i.u,{children:(0,t.jsx)(n.p,{children:"The 'Graph' in 'GraphQL' relates to traversing the graph of your data model. The\nvalue of a node in a graph is independent of the path through which it was\nfetched."})}),"\n",(0,t.jsx)(n.p,{children:"The 'Graph' in 'GraphQL' comes from, originally, Facebook thinking of their data\nin terms of a graph:"}),"\n",(0,t.jsxs)("figure",{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A graph showing a &quot;user&quot; and a &quot;page&quot; related as &quot;user likes page&quot;, along with other relationships from the page, and to and from the user.",src:r(150).Z+"",width:"720",height:"451"})}),(0,t.jsx)("figcaption",{children:(0,t.jsxs)(n.p,{children:["\xa9 Meta Platforms Inc; from the article\n",(0,t.jsx)(n.a,{href:"https://engineering.fb.com/2013/03/06/core-infra/under-the-hood-building-out-the-infrastructure-for-graph-search/",children:"Under the Hood: Building out the infrastructure for Graph Search"}),",\nretrieved 2024-01-06T10:27:00Z.",(0,t.jsx)("br",{}),(0,t.jsx)("small",{children:'Used under the "Fair Use" doctrine\n(Copyright Act, Section 107).'})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"graph-overview",children:"Graph overview"}),"\n",(0,t.jsx)(n.p,{children:'In a mathematical graph, there are "nodes" and "edges". The nodes are generally\nthe entities (users, pages, posts, photos, etc), and the edges are the\nrelationships between those entities (likes, tagged, photo, friend, etc). Both\nnodes and edges may contain data, for example, an edge might show that Bob is a\nfriend of Alice, and it can contain additional information such as the duration\nof that friendship.'}),"\n",(0,t.jsx)(n.p,{children:"When traversing a mathematical graph, you can start at a node (or set of nodes)\nand then follow the edges to discover new nodes. Let's imagine your name is\n'Current Viewer' and this is a portion of your social graph:"}),"\n",(0,t.jsx)(n.mermaid,{value:'%%{init: {\'themeVariables\': { \'edgeLabelBackground\': \'white\'}}}%%\nflowchart TD\n  Viewer{{"Current Viewer"}}:::start -- "likes" --\x3e Discworld(["Discworld"])\n  Viewer -- "friend" --\x3e Alice["Aveline<br/>Gearhart"]\n  Viewer -- "friend" ---\x3e Bob["Lil\'<br>Bobby"]\n  Alice -- "friend" --\x3e  Bob\n  Alice -- "friend" --\x3e Carl["Carlos<br>Gonzales"]\n  Alice -- "likes" --\x3e SteamPunk\n  Viewer -- "likes" --\x3e SteamPunk(["Steam Punk"])\n  Bob -- "likes" --\x3e SQLI(["SQL Injection"])\n  Bob -- "likes" --\x3e Conferences(["Conferences"])\n  Bob -. "friend" .-> Blank2["&nbsp;"]:::blank\n  Carl -. "friend" .-> Blank2["&nbsp;"]:::blank\n  Carl -. "friend" .-> Blank3["&nbsp;"]:::blank\n  Carl -. "likes" .-> Blank4(["&nbsp;"]):::blank\n\n  classDef start fill:#ffffff,stroke-width:4,stroke:black,font-weight:bold\n  classDef page fill:#eeccee\n  classDef blank fill:transparent,stroke-dasharray:5 5,width:6rem\n  class Discworld,Conferences,SteamPunk,SQLI,Blank4 page\n\n  linkStyle 2 color:blue,stroke:blue,stroke-width:4\n  linkStyle 1,3 color:#DC3220,stroke:#DC3220,stroke-width:4'}),"\n",(0,t.jsxs)(n.p,{children:["To get to Lil' Bobby you could traverse ",(0,t.jsx)(n.code,{children:"friend"})," directly (",(0,t.jsx)(n.strong,{children:(0,t.jsx)("span",{style:{color:"blue"},children:"blue"})}),"), or you could traverse ",(0,t.jsx)(n.code,{children:"friend>friend"})," to\ngo via Aveline Gearhart (",(0,t.jsx)(n.strong,{children:(0,t.jsx)("span",{style:{color:"#DC3220"},children:"red"})}),"). Note\nthat independent of which path you take to get to Lil' Bobby, their likes are\nalways the same: SQL Injection and Conferences."]}),"\n",(0,t.jsxs)(n.p,{children:["This property turns out to be really important if you want to ensure the web\npage is always rendered consistently even when only doing small data fetches by\nusing a storage technique we call ",(0,t.jsx)(n.a,{href:"/graphql/normalized",children:"normalized stores"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},4664:(e,n,r)=>{r.d(n,{Z:()=>i});r(7294);const t="pullquote_fEhA";var a=r(5893);const i=e=>{let{children:n}=e;return(0,a.jsx)("aside",{className:t,children:(0,a.jsx)("blockquote",{children:n})})}},768:(e,n,r)=>{r.d(n,{u:()=>o});r(7294);const t="tldr_fcon",a="inner_JkE_";var i=r(5893);const o=e=>{let{children:n}=e;return(0,i.jsx)("aside",{className:t,children:(0,i.jsx)("div",{className:a,children:n})})}},150:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/graph-71bf84d7f933c61190b3df56e0113b0c.png"},1151:(e,n,r)=>{r.d(n,{Z:()=>s,a:()=>o});var t=r(7294);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);