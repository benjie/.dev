"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[4416],{9474:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=t(5893),r=t(1151);const o={identifier:"883",title:"Relax SameResponseShape algorithm to be compatible with covariant fields",stage:"X",champion:"IvanGoncharov",prUrl:"https://github.com/graphql/graphql-spec/pull/883",events:[{type:"prCreated",date:new Date("2021-09-02T15:53:59.000Z"),href:"https://github.com/graphql/graphql-spec/pull/883",actor:"IvanGoncharov"},{type:"commitsPushed",date:new Date("2021-09-02T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/3e0a211ee4008cb9774aabb801894c3ca6bf4dd8",actor:"IvanGoncharov",commits:[{href:"https://github.com/graphql/graphql-spec/commit/3e0a211ee4008cb9774aabb801894c3ca6bf4dd8",headline:"Relax SameResponseShape algorith to be compatible with covariant fields",ghUser:"IvanGoncharov",authorName:"Ivan Goncharov"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-09-02.md",date:new Date("2021-09-02T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-09-02.md",date:new Date("2021-09-02T00:00:00.000Z"),actor:null}],shortname:"Relax SameResponseShape algorithm to be compatible with covariant fields",image:"/img/rfc_tracker.png",closedAt:new Date("2022-01-06T18:33:52.000Z"),nextStage:!1},c=void 0,i={id:"883",title:"Relax SameResponseShape algorithm to be compatible with covariant fields",description:"At a glance",source:"@site/rfcs/883.md",sourceDirName:".",slug:"/883",permalink:"/rfcs/883",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"883",title:"Relax SameResponseShape algorithm to be compatible with covariant fields",stage:"X",champion:"IvanGoncharov",prUrl:"https://github.com/graphql/graphql-spec/pull/883",events:[{type:"prCreated",date:"2021-09-02T15:53:59.000Z",href:"https://github.com/graphql/graphql-spec/pull/883",actor:"IvanGoncharov"},{type:"commitsPushed",date:"2021-09-02T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/3e0a211ee4008cb9774aabb801894c3ca6bf4dd8",actor:"IvanGoncharov",commits:[{href:"https://github.com/graphql/graphql-spec/commit/3e0a211ee4008cb9774aabb801894c3ca6bf4dd8",headline:"Relax SameResponseShape algorith to be compatible with covariant fields",ghUser:"IvanGoncharov",authorName:"Ivan Goncharov"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-09-02.md",date:"2021-09-02T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-09-02.md",date:"2021-09-02T00:00:00.000Z",actor:null}],shortname:"Relax SameResponseShape algorithm to be compatible with covariant fields",image:"/img/rfc_tracker.png",closedAt:"2022-01-06T18:33:52.000Z",nextStage:!1},sidebar:"rfcsSidebar",previous:{title:"Map type",permalink:"/rfcs/888"},next:{title:"Tagged type",permalink:"/rfcs/733"}},s={},l=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function h(e){const a={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Identifier"}),": #883"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Stage"}),": ",(0,n.jsx)(a.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-x-rejected",children:"RFCX: Rejected"})]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Champion"}),": ",(0,n.jsx)(a.a,{href:"https://github.com/IvanGoncharov",children:"@IvanGoncharov"})]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"PR"}),": ",(0,n.jsx)(a.a,{href:"https://github.com/graphql/graphql-spec/pull/883",children:"Relax SameResponseShape algorithm to be compatible with covariant fields"})]}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"timeline",children:"Timeline"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsxs)(a.strong,{children:[(0,n.jsx)(a.a,{href:"https://github.com/graphql/graphql-spec/pull/883",children:"Spec PR"})," created"]})," on 2021-09-02 by IvanGoncharov"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Commit pushed"}),": ",(0,n.jsx)(a.a,{href:"https://github.com/graphql/graphql-spec/commit/3e0a211ee4008cb9774aabb801894c3ca6bf4dd8",children:"Relax SameResponseShape algorith to be compatible with covariant fields"})," on 2021-09-02 by ",(0,n.jsx)(a.a,{href:"https://github.com/IvanGoncharov",children:"@IvanGoncharov"})]}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsxs)(a.strong,{children:["Added to ",(0,n.jsx)(a.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-09-02.md",children:"2021-09-02 WG agenda"})]})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsxs)(a.strong,{children:["Mentioned in ",(0,n.jsx)(a.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-09-02.md",children:"2021-09-02 WG notes"})]})}),"\n"]}),"\n",(0,n.jsx)(a.hr,{}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsx)(a.p,{children:"At the moment covariance rules for interfaces are incompatible with\nvalidation rule for overlapping fragments.\nFor example, if we have schema like this:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-graphql",children:"interface AddressInterface {\n  country_code: String\n}\n\ntype Port implements AddressInterface {\n  country_code: String!\n}\n\ntype Warehouse implements AddressInterface {\n  country_code: String\n}\n\ntype Query {\n  addressInterface: AddressInterface\n}\n"})}),"\n",(0,n.jsx)(a.p,{children:"This query is valid:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-graphql",children:"query {\n  addressInterface {\n    country_code\n  }\n}\n"})}),"\n",(0,n.jsx)(a.p,{children:"But if you expand interface field into inline fragments will cause a\nvalidation error:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-graphql",children:"query {\n  addressInterface {\n    ... on Port {\n      country_code\n    }\n    ... on Warehouse {\n      country_code\n    }\n  }\n}\n"})}),"\n",(0,n.jsx)(a.p,{children:"This PR fixes this issue."}),"\n"]})]})}function p(e={}){const{wrapper:a}={...(0,r.a)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},1151:(e,a,t)=>{t.d(a,{Z:()=>i,a:()=>c});var n=t(7294);const r={},o=n.createContext(r);function c(e){const a=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(o.Provider,{value:a},e.children)}}}]);