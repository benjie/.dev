"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[5757],{106:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>o});var r=a(5893),l=a(1151);const t={identifier:"445",title:"Disallow non-breakable chains of circular references in Input Objects",stage:"3",champion:"spawnia",prUrl:"https://github.com/graphql/graphql-spec/pull/445",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2019/2019-11-07.md",date:new Date("2019-11-07T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2019/2019-11-07.md",date:new Date("2019-11-07T00:00:00.000Z"),actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2019/2019-10-10.md",date:new Date("2019-10-10T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2019/2019-10-10.md",date:new Date("2019-10-10T00:00:00.000Z"),actor:null},{type:"prCreated",date:new Date("2018-05-16T18:20:15.000Z"),href:"https://github.com/graphql/graphql-spec/pull/445",actor:"spawnia"}],related:"701",shortname:"Disallow non-breakable chains of circular references in Input Objects",image:"/img/rfc_tracker.png",closedAt:new Date("2020-03-24T08:47:58.000Z"),weirdMerge:!0,nextStage:!1},s=void 0,i={id:"445",title:"Disallow non-breakable chains of circular references in Input Objects",description:"At a glance",source:"@site/rfcs/445.md",sourceDirName:".",slug:"/445",permalink:"/rfcs/445",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"445",title:"Disallow non-breakable chains of circular references in Input Objects",stage:"3",champion:"spawnia",prUrl:"https://github.com/graphql/graphql-spec/pull/445",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2019/2019-11-07.md",date:"2019-11-07T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2019/2019-11-07.md",date:"2019-11-07T00:00:00.000Z",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2019/2019-10-10.md",date:"2019-10-10T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2019/2019-10-10.md",date:"2019-10-10T00:00:00.000Z",actor:null},{type:"prCreated",date:"2018-05-16T18:20:15.000Z",href:"https://github.com/graphql/graphql-spec/pull/445",actor:"spawnia"}],related:"701",shortname:"Disallow non-breakable chains of circular references in Input Objects",image:"/img/rfc_tracker.png",closedAt:"2020-03-24T08:47:58.000Z",weirdMerge:!0,nextStage:!1},sidebar:"rfcsSidebar",previous:{title:"Add validation steps for schema extensions",permalink:"/rfcs/454"},next:{title:"Schema Coordinates",permalink:"/rfcs/794"}},c={},o=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Identifier"}),": #445"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stage"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-3-accepted",children:"RFC3: Accepted"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Champion"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/spawnia",children:"@spawnia"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PR"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/pull/445",children:"Disallow non-breakable chains of circular references in Input Objects"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Related"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/rfcs/701",title:"Disallow non-breakable chains of circular references in Input Objects / RFC3",children:"#701"})," (Disallow non-breakable chains of circular references in Input Objects)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"timeline",children:"Timeline"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Added to ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2019/2019-11-07.md",children:"2019-11-07 WG agenda"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Mentioned in ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2019/2019-11-07.md",children:"2019-11-07 WG notes"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Added to ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2019/2019-10-10.md",children:"2019-10-10 WG agenda"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Mentioned in ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2019/2019-10-10.md",children:"2019-10-10 WG notes"})]})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/pull/445",children:"Spec PR"})," created"]})," on 2018-05-16 by spawnia"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"This was already discussed in Issue #189"}),"\n",(0,r.jsx)(n.p,{children:"Input Objects are allowed to reference other Input Objects. A circular reference occurs\nwhen an Input Object references itself either directly or through subordinated Input Objects."}),"\n",(0,r.jsx)(n.p,{children:"Circular references are generally allowed, however they may not be defined as an\nunbroken chain of Non-Null fields. Such Input Objects are invalid, because there\nis no way to provide a legal value for them."}),"\n",(0,r.jsx)(n.p,{children:"The following examples are allowed:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",metastring:"example",children:"input Example {\n  self: Example\n  value: String\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This is fine because a value for ",(0,r.jsx)(n.code,{children:"self"})," may simply be omitted from the arguments."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",metastring:"example",children:"input Example {\n  self: [Example!]!\n  value: String\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This also works as ",(0,r.jsx)(n.code,{children:"self"})," can just contain an empty list."]}),"\n",(0,r.jsx)(n.p,{children:"The following examples are invalid:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",metastring:"counter-example",children:"input Example {\n  value: String\n  self: Example!\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",metastring:"counter-example",children:"input First {\n  second: Second!\n  value: String\n}\n\ninput Second {\n  first: First!\n  value: String\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"The following example shows why no possible value can be provided:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'{\n  someField(input: {\n    value: "val"\n    # self is required\n    self: {\n      value: "nextval"\n      # self is still required\n      self: {\n        # We would have to recurse down infinitely\n        ...\n      }\n    }\n  })\n}\n'})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>i,a:()=>s});var r=a(7294);const l={},t=r.createContext(l);function s(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);