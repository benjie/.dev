"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[7632],{3787:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>o});var n=i(5893),l=i(1151);const c={identifier:"1177",closedAt:null,mergedAt:null,title:"Incorporate meta-fields into ExecuteCollectedFields",stage:"0",nextStage:!0,champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1177",events:[{type:"prCreated",date:new Date("2025-07-03T13:08:48.000Z"),href:"https://github.com/graphql/graphql-spec/pull/1177",actor:"benjie"},{type:"commitsPushed",date:new Date("2025-07-03T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/1e48b21452726f1800bff53e1610e6de274fc6b5",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/1e48b21452726f1800bff53e1610e6de274fc6b5",headline:"Incorporate meta-fields into ExecuteCollectedFields",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"Incorporate meta-fields into ExecuteCollectedFields",image:"/img/rfc_tracker.png"},r=void 0,s={id:"1177",title:"Incorporate meta-fields into ExecuteCollectedFields",description:"At a glance",source:"@site/rfcs/1177.md",sourceDirName:".",slug:"/1177",permalink:"/rfcs/1177",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"1177",closedAt:null,mergedAt:null,title:"Incorporate meta-fields into ExecuteCollectedFields",stage:"0",nextStage:!0,champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1177",events:[{type:"prCreated",date:"2025-07-03T13:08:48.000Z",href:"https://github.com/graphql/graphql-spec/pull/1177",actor:"benjie"},{type:"commitsPushed",date:"2025-07-03T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/1e48b21452726f1800bff53e1610e6de274fc6b5",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/1e48b21452726f1800bff53e1610e6de274fc6b5",headline:"Incorporate meta-fields into ExecuteCollectedFields",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"Incorporate meta-fields into ExecuteCollectedFields",image:"/img/rfc_tracker.png"},sidebar:"rfcsSidebar",previous:{title:"Allow singular variables in list locations",permalink:"/rfcs/509"},next:{title:"Scalar serialize as built-in scalar type",permalink:"/rfcs/521"}},a={},o=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Identifier"}),": #1177"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Stage"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-0-strawman",children:"RFC0: Strawman"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Champion"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"PR"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1177",children:"Incorporate meta-fields into ExecuteCollectedFields"})]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"timeline",children:"Timeline"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1177",children:"Spec PR"})," created"]})," on 2025-07-03 by benjie"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/1e48b21452726f1800bff53e1610e6de274fc6b5",children:"Incorporate meta-fields into ExecuteCollectedFields"})," on 2025-07-03 by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["GraphQL.js uses a ",(0,n.jsx)(t.code,{children:"getFieldDef()"})," helper:"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-js/blob/9032db1e4e55052bead6936359ecc5592c817f64/src/execution/execute.ts#L1047-L1079",children:"https://github.com/graphql/graphql-js/blob/9032db1e4e55052bead6936359ecc5592c817f64/src/execution/execute.ts#L1047-L1079"})}),"\n",(0,n.jsxs)(t.p,{children:["called from ",(0,n.jsx)(t.code,{children:"executeField()"})," to get the field definition to execute; returning meta-field definitions as appropriate."]}),"\n",(0,n.jsx)(t.p,{children:"This spec change reflects this existing behavior as best we can."}),"\n",(0,n.jsxs)(t.p,{children:["(Technically GraphQL.js' ",(0,n.jsx)(t.code,{children:"executeField()"})," function overlaps responsibilities between the ",(0,n.jsx)(t.code,{children:"ExecuteField()"})," and ",(0,n.jsx)(t.code,{children:"ExecuteCollectedFields()"})," algorithms in the spec - specifically, ",(0,n.jsx)(t.code,{children:"executeField()"})," may return ",(0,n.jsx)(t.code,{children:"undefined"}),", resulting in ",(0,n.jsx)(t.code,{children:"executeFields()"})," not adding the entry to the result object, whereas this conditional addition is handled in ",(0,n.jsx)(t.code,{children:"ExecuteCollectedFields()"})," in the spec and we cannot/should not differentiate between ",(0,n.jsx)(t.code,{children:"null"})," and ",(0,n.jsx)(t.code,{children:"undefined"})," in this way.)"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>s,a:()=>r});var n=i(7294);const l={},c=n.createContext(l);function r(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);