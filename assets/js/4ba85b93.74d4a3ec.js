"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[7632],{3787:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>n,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>h});var c=i(5893),r=i(1151);const l={identifier:"1177",closedAt:null,mergedAt:null,title:"Incorporate meta-fields into ExecuteCollectedFields",stage:"1",nextStage:!0,champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1177",events:[{type:"commitsPushed",date:new Date("2025-07-04T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/3d6864ea91a31bd23d267d052fc3cf91c468e5f9",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/3d6864ea91a31bd23d267d052fc3cf91c468e5f9",headline:"Introduce ResolveMetaFieldValue algorithm",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/d65ee7585250260ab7ed94b353388b6fe3718611",headline:"Refactor to add assertion",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/c65fcd21cc87c66e492cbd4211cd4ab7308eae4e",headline:"This should require less refactoring when we add future meta-fields",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/4b7c111802bebde1703ae8f6c661847f4fce3caa",headline:"Could be an introspection type",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"prCreated",date:new Date("2025-07-03T13:08:48.000Z"),href:"https://github.com/graphql/graphql-spec/pull/1177",actor:"benjie"},{type:"commitsPushed",date:new Date("2025-07-03T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/1e48b21452726f1800bff53e1610e6de274fc6b5",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/1e48b21452726f1800bff53e1610e6de274fc6b5",headline:"Incorporate meta-fields into ExecuteCollectedFields",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/07-Jul/03-wg-primary.md",date:new Date("2025-07-03T00:00:00.000Z"),actor:null}],shortname:"Incorporate meta-fields into ExecuteCollectedFields",image:"/img/rfc_tracker.png"},n=void 0,a={id:"1177",title:"Incorporate meta-fields into ExecuteCollectedFields",description:"At a glance",source:"@site/rfcs/1177.md",sourceDirName:".",slug:"/1177",permalink:"/rfcs/1177",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"1177",closedAt:null,mergedAt:null,title:"Incorporate meta-fields into ExecuteCollectedFields",stage:"1",nextStage:!0,champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1177",events:[{type:"commitsPushed",date:"2025-07-04T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/3d6864ea91a31bd23d267d052fc3cf91c468e5f9",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/3d6864ea91a31bd23d267d052fc3cf91c468e5f9",headline:"Introduce ResolveMetaFieldValue algorithm",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/d65ee7585250260ab7ed94b353388b6fe3718611",headline:"Refactor to add assertion",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/c65fcd21cc87c66e492cbd4211cd4ab7308eae4e",headline:"This should require less refactoring when we add future meta-fields",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/4b7c111802bebde1703ae8f6c661847f4fce3caa",headline:"Could be an introspection type",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"prCreated",date:"2025-07-03T13:08:48.000Z",href:"https://github.com/graphql/graphql-spec/pull/1177",actor:"benjie"},{type:"commitsPushed",date:"2025-07-03T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/1e48b21452726f1800bff53e1610e6de274fc6b5",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/1e48b21452726f1800bff53e1610e6de274fc6b5",headline:"Incorporate meta-fields into ExecuteCollectedFields",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/07-Jul/03-wg-primary.md",date:"2025-07-03T00:00:00.000Z",actor:null}],shortname:"Incorporate meta-fields into ExecuteCollectedFields",image:"/img/rfc_tracker.png"},sidebar:"rfcsSidebar",previous:{title:"Type system ordering of: object interfaces, directive arguments, input object fields, enum values",permalink:"/rfcs/1063"},next:{title:"Service capabilities / error behaviors",permalink:"/rfcs/1163"}},s={},h=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function o(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Identifier"}),": #1177"]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Stage"}),": ",(0,c.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-1-proposal",children:"RFC1: Proposal"})]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Champion"}),": ",(0,c.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"PR"}),": ",(0,c.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1177",children:"Incorporate meta-fields into ExecuteCollectedFields"})]}),"\n"]}),"\n",(0,c.jsx)(t.h2,{id:"timeline",children:"Timeline"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"4 commits pushed"})," on 2025-07-04:","\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/3d6864ea91a31bd23d267d052fc3cf91c468e5f9",children:"Introduce ResolveMetaFieldValue algorithm"})," by ",(0,c.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/d65ee7585250260ab7ed94b353388b6fe3718611",children:"Refactor to add assertion"})," by ",(0,c.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/c65fcd21cc87c66e492cbd4211cd4ab7308eae4e",children:"This should require less refactoring when we add future meta-fields"})," by ",(0,c.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/4b7c111802bebde1703ae8f6c661847f4fce3caa",children:"Could be an introspection type"})," by ",(0,c.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsxs)(t.strong,{children:[(0,c.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1177",children:"Spec PR"})," created"]})," on 2025-07-03 by benjie"]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,c.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/1e48b21452726f1800bff53e1610e6de274fc6b5",children:"Incorporate meta-fields into ExecuteCollectedFields"})," on 2025-07-03 by ",(0,c.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,c.jsx)(t.li,{children:(0,c.jsxs)(t.strong,{children:["Added to ",(0,c.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/07-Jul/03-wg-primary.md",children:"2025-07-03 WG agenda"})]})}),"\n"]}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsxs)(t.blockquote,{children:["\n",(0,c.jsxs)(t.p,{children:["GraphQL.js uses a ",(0,c.jsx)(t.code,{children:"getFieldDef()"})," helper:"]}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.a,{href:"https://github.com/graphql/graphql-js/blob/9032db1e4e55052bead6936359ecc5592c817f64/src/execution/execute.ts#L1047-L1079",children:"https://github.com/graphql/graphql-js/blob/9032db1e4e55052bead6936359ecc5592c817f64/src/execution/execute.ts#L1047-L1079"})}),"\n",(0,c.jsxs)(t.p,{children:["called from ",(0,c.jsx)(t.code,{children:"executeField()"})," to get the field definition to execute; returning meta-field definitions as appropriate."]}),"\n",(0,c.jsx)(t.p,{children:"This spec change reflects this existing behavior as best we can."}),"\n",(0,c.jsxs)(t.p,{children:["(Technically GraphQL.js' ",(0,c.jsx)(t.code,{children:"executeField()"})," function overlaps responsibilities between the ",(0,c.jsx)(t.code,{children:"ExecuteField()"})," and ",(0,c.jsx)(t.code,{children:"ExecuteCollectedFields()"})," algorithms in the spec - specifically, ",(0,c.jsx)(t.code,{children:"executeField()"})," may return ",(0,c.jsx)(t.code,{children:"undefined"}),", resulting in ",(0,c.jsx)(t.code,{children:"executeFields()"})," not adding the entry to the result object, whereas this conditional addition is handled in ",(0,c.jsx)(t.code,{children:"ExecuteCollectedFields()"})," in the spec and we cannot/should not differentiate between ",(0,c.jsx)(t.code,{children:"null"})," and ",(0,c.jsx)(t.code,{children:"undefined"})," in this way.)"]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>a,a:()=>n});var c=i(7294);const r={},l=c.createContext(r);function n(e){const t=c.useContext(l);return c.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),c.createElement(l.Provider,{value:t},e.children)}}}]);