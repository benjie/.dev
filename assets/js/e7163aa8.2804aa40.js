"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[7352],{4486:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>h});var t=n(5893),i=n(1151);const s={identifier:"1163",closedAt:null,mergedAt:null,title:"Allow clients to disable error propagation via request parameter (take 2)",stage:"1",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1163",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/05-May/01-wg-primary.md",date:new Date("2025-05-01T00:00:00.000Z"),actor:null},{type:"prCreated",date:new Date("2025-04-30T11:06:37.000Z"),href:"https://github.com/graphql/graphql-spec/pull/1163",actor:"benjie"},{type:"commitsPushed",date:new Date("2025-04-30T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/31c90e7216d49b3f0bbf697c9630edc21369bb53",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/31c90e7216d49b3f0bbf697c9630edc21369bb53",headline:"Detail onError request parameter",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/f4fab967d1040b8ea28e583f428cd280f7197047",headline:"Detail introspection changes",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/692d811fa7895108af0c959d473e056b327ebab5",headline:"Define the directive",ghUser:"benjie",authorName:"Benjie Gillam"}]}],related:"1065, 1153",shortname:"Allow clients to disable error propagation via request parameter (take 2)",image:"/img/rfc_tracker.png"},a=void 0,l={id:"1163",title:"Allow clients to disable error propagation via request parameter (take 2)",description:"At a glance",source:"@site/rfcs/1163.md",sourceDirName:".",slug:"/1163",permalink:"/rfcs/1163",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"1163",closedAt:null,mergedAt:null,title:"Allow clients to disable error propagation via request parameter (take 2)",stage:"1",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1163",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/05-May/01-wg-primary.md",date:"2025-05-01T00:00:00.000Z",actor:null},{type:"prCreated",date:"2025-04-30T11:06:37.000Z",href:"https://github.com/graphql/graphql-spec/pull/1163",actor:"benjie"},{type:"commitsPushed",date:"2025-04-30T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/31c90e7216d49b3f0bbf697c9630edc21369bb53",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/31c90e7216d49b3f0bbf697c9630edc21369bb53",headline:"Detail onError request parameter",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/f4fab967d1040b8ea28e583f428cd280f7197047",headline:"Detail introspection changes",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/692d811fa7895108af0c959d473e056b327ebab5",headline:"Define the directive",ghUser:"benjie",authorName:"Benjie Gillam"}]}],related:"1065, 1153",shortname:"Allow clients to disable error propagation via request parameter (take 2)",image:"/img/rfc_tracker.png"},sidebar:"rfcsSidebar",previous:{title:"Add descriptions to executable definitions",permalink:"/rfcs/892"},next:{title:"List coercion algorithm",permalink:"/rfcs/1058"}},o={},h=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function c(e){const r={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Identifier"}),": #1163"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Stage"}),": ",(0,t.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-1-proposal",children:"RFC1: Proposal"})]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Champion"}),": ",(0,t.jsx)(r.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"PR"}),": ",(0,t.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/pull/1163",children:"Allow clients to disable error propagation via request parameter (take 2)"})]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Related"}),":","\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/rfcs/1065",title:"SemanticNonNull type (null only on error) / RFC0",children:"#1065"})," (SemanticNonNull type (null only on error))"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/rfcs/1153",title:"Allow clients to disable error propagation via request parameter / RFCX",children:"#1153"})," (Allow clients to disable error propagation via request parameter)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"timeline",children:"Timeline"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.strong,{children:["Added to ",(0,t.jsx)(r.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/05-May/01-wg-primary.md",children:"2025-05-01 WG agenda"})]})}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsxs)(r.strong,{children:[(0,t.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/pull/1163",children:"Spec PR"})," created"]})," on 2025-04-30 by benjie"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"3 commits pushed"})," on 2025-04-30:","\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/commit/31c90e7216d49b3f0bbf697c9630edc21369bb53",children:"Detail onError request parameter"})," by ",(0,t.jsx)(r.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/commit/f4fab967d1040b8ea28e583f428cd280f7197047",children:"Detail introspection changes"})," by ",(0,t.jsx)(r.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/commit/692d811fa7895108af0c959d473e056b327ebab5",children:"Define the directive"})," by ",(0,t.jsx)(r.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"This is a rewrite of"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"#1153"}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["It is re-implemented on top of the recent editorial work (e.g. renaming ",(0,t.jsx)(r.code,{children:"_field error_"})," to ",(0,t.jsx)(r.code,{children:"_execution error_"}),") and also makes a significant change in that it does not require\u200b ",(0,t.jsx)(r.code,{children:"onError"})," to be included in the response, instead an introspection field is used to indicate:"]}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["that ",(0,t.jsx)(r.code,{children:"onError"})," is supported"]}),"\n",(0,t.jsxs)(r.li,{children:["what the behavior will be if ",(0,t.jsx)(r.code,{children:"onError"})," is not present"]}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.p,{children:"Replaces:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"#1050"}),"\n",(0,t.jsx)(r.li,{children:"#1145"}),"\n",(0,t.jsx)(r.li,{children:"#1153"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"GraphQL.js implementation:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://github.com/graphql/graphql-js/pull/4364",children:"https://github.com/graphql/graphql-js/pull/4364"})}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.a,{href:"https://www.youtube.com/shorts/gYnVaZz-19A",children:"Please see this 60 second video on the motivation for this PR"}),' (the last few seconds of the video also covers "transitional non-null" which is a ',(0,t.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/pull/1065",children:"separate concern"}),")."]}),"\n",(0,t.jsx)(r.p,{children:"As agreed at the nullability working group, disabling error propagation is the future of error handling in GraphQL. Error propagation causes a number of issues, but chief among them are:"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"It destroys useful data in the response."}),"\n",(0,t.jsxs)(r.li,{children:["It makes it ",(0,t.jsx)(r.a,{href:"https://github.com/graphql/nullability-wg/discussions/23",children:"unsafe to store resulting data in normalized stores"}),"."]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Clients such as Relay do not want error propagation to be a thing."}),"\n",(0,t.jsxs)(r.p,{children:["This has traditionally resulted in schema design best practices advising using nullable in positions where errors were expected, even if ",(0,t.jsx)(r.code,{children:"null"})," was never a semantically valid value for that position. And since errors can happen everywhere, this has lead to an explosion of nullability and significant pain on the client side with developers having to do seemingly unnecessary null checks in loads of positions, or worse - unsafely bypassing the type safety."]}),"\n",(0,t.jsxs)(r.p,{children:['The reason that GraphQL does error propagation is to keep it\'s "not null" promise in the event that an error occurs (and is replaced with ',(0,t.jsx)(r.code,{children:"null"})," due to the way GraphQL responses are structured and limitations in JSON) in a non-nullable position."]}),"\n",(0,t.jsxs)(r.p,{children:["It doesn't take much code on the client to prevent the client reading a ",(0,t.jsx)(r.code,{children:"null"})," that relates to an error, ",(0,t.jsx)(r.a,{href:"https://www.npmjs.com/package/graphql-toe",children:"graphql-toe"})," can be used with almost any JavaScript or TypeScript based GraphQL client (not Relay, but it has ",(0,t.jsx)(r.code,{children:"@throwOnFieldError"})," that you can use instead) and achieves this ",(0,t.jsx)(r.a,{href:"https://bundlephobia.com/package/graphql-toe@1.0.0-rc.0",children:"in 512 bytes gzipped"})," - and that's with a focus on performance rather than bundle size."]}),"\n",(0,t.jsxs)(r.p,{children:["This PR allows the client to take responsibility for error handling by specifying ",(0,t.jsx)(r.code,{children:'onError: "NO_PROPAGATE"'})," as part of the GraphQL request, and thereby turns off error propagation behavior. This is also set as the recommended default for future schemas."]}),"\n",(0,t.jsxs)(r.p,{children:["With clients responsible for error handling, we no longer need to factor the possibility of whether something can error or not into its nullability, meaning we can use the not-null ",(0,t.jsx)(r.code,{children:"!"})," to indicate all the positions in the schema for which ",(0,t.jsx)(r.code,{children:"null"})," is not a semantically valid value - i.e. the underlying resource will never be a legitimate ",(0,t.jsx)(r.code,{children:"null"}),"."]}),"\n",(0,t.jsx)(r.p,{children:"The end result:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"true nullability indicated in schema - no more thinking about where errors are likely"}),"\n",(0,t.jsx)(r.li,{children:"fewer null checks on clients"}),"\n",(0,t.jsxs)(r.li,{children:["clients can leverage their native error handling capabilities such as try/catch or ",(0,t.jsx)(r.code,{children:"<ErrorBoundary />"})]}),"\n",(0,t.jsx)(r.li,{children:"safe to store errored responses into normalized stores"}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.p,{children:["I've also included ",(0,t.jsx)(r.code,{children:'onError: "ABORT"'})," in this proposal. We've discovered that there's a small but significant class\u200b of clients out there, mostly ad-hoc scripts, that throw away the entire response when any error occurs. By codifying this into the spec we make it easier to implement these clients, and we allow the server to abort processing the rest of the request unnecessarily."]}),"\n",(0,t.jsxs)(r.p,{children:["As noted by @revangen in ",(0,t.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/pull/1153#issuecomment-2810602063",children:"this comment"}),":"]}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:'I\'ve also included onError: "ABORT" in this proposal.'}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["Appreciate this being included. For Shopify's public ",(0,t.jsx)(r.a,{href:"https://shopify.dev/docs/api/admin-graphql",children:"Admin GraphQL API"}),", we have a mix of scenarios that result in a partial success response and only error response. Having been around for 8+ years, we are reluctant at times to change its behaviour to favour partial responses as we don't control majority of clients. Providing clients a way to specify the server's behaviour provides a migration path should clients care about partial responses."]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>l,a:()=>a});var t=n(7294);const i={},s=t.createContext(i);function a(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);