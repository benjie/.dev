"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[7517],{1608:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=n(5893),r=n(1151);const s={identifier:"1092",closedAt:null,mergedAt:null,title:"Recommend that order of unordered collections is maintained where possible",stage:"2",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1092",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2024/06-Jun/06-wg-primary.md",date:new Date("2024-06-06T00:00:00.000Z"),actor:null},{type:"prCreated",date:new Date("2024-04-05T09:05:03.000Z"),href:"https://github.com/graphql/graphql-spec/pull/1092",actor:"benjie"},{type:"commitsPushed",date:new Date("2024-04-05T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/368a48bae017c126b700d4db442b9f8d8090029c",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/368a48bae017c126b700d4db442b9f8d8090029c",headline:"Add recommendation to preserve order where possible",ghUser:"benjie",authorName:"Benjie Gillam"}]}],related:"1091, 1102",shortname:"Recommend that order of unordered collections is maintained where possible",image:"/img/rfc_tracker.png"},a=void 0,l={id:"1092",title:"Recommend that order of unordered collections is maintained where possible",description:"At a glance",source:"@site/rfcs/1092.md",sourceDirName:".",slug:"/1092",permalink:"/rfcs/1092",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"1092",closedAt:null,mergedAt:null,title:"Recommend that order of unordered collections is maintained where possible",stage:"2",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1092",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2024/06-Jun/06-wg-primary.md",date:"2024-06-06T00:00:00.000Z",actor:null},{type:"prCreated",date:"2024-04-05T09:05:03.000Z",href:"https://github.com/graphql/graphql-spec/pull/1092",actor:"benjie"},{type:"commitsPushed",date:"2024-04-05T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/368a48bae017c126b700d4db442b9f8d8090029c",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/368a48bae017c126b700d4db442b9f8d8090029c",headline:"Add recommendation to preserve order where possible",ghUser:"benjie",authorName:"Benjie Gillam"}]}],related:"1091, 1102",shortname:"Recommend that order of unordered collections is maintained where possible",image:"/img/rfc_tracker.png"},sidebar:"rfcsSidebar",previous:{title:"Type system ordering of: object interfaces, directive arguments, input object fields, enum values",permalink:"/rfcs/1063"},next:{title:"Default value coercion rules",permalink:"/rfcs/793"}},o={},c=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Identifier"}),": #1092"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Stage"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-2-draft",children:"RFC2: Draft"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Champion"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"PR"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1092",children:"Recommend that order of unordered collections is maintained where possible"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Related"}),":","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/rfcs/1091",title:"Define Data Collections used in the spec / RFCX",children:"#1091"})," (Define Data Collections used in the spec)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/rfcs/1102",title:"Define Data Collections used in the spec / RFC2",children:"#1102"})," (Define Data Collections used in the spec)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"timeline",children:"Timeline"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsxs)(t.strong,{children:["Added to ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2024/06-Jun/06-wg-primary.md",children:"2024-06-06 WG agenda"})]})}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1092",children:"Spec PR"})," created"]})," on 2024-04-05 by benjie"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/368a48bae017c126b700d4db442b9f8d8090029c",children:"Add recommendation to preserve order where possible"})," on 2024-04-05 by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["For legibility and consistency reasons, it's helpful if the order of unordered collections is maintained. For example, an enum describes a set (unordered) of possible values, but it would be irritating if every time you introspected the API or built an SDL for it the enum values were in a different (random) order. This PR recommends that you maintain the initial order that such unordered collections were created with. Theoretically, this means that if you generate SDL from a schema (e.g. via introspection) and then build a new cloned schema from this SDL, generating SDL from this cloned schema (e.g. via introspection) should match the original SDL (i.e. ",(0,i.jsx)(t.code,{children:"printSchema(schema) == printSchema(buildClientSchema(introspectionFromSchema(schema)))"}),")"]}),"\n",(0,i.jsxs)(t.p,{children:["This PR builds on #1091 and is a change extracted from #1063 as discussed at ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2024/2024-04.md#ordering-of-schema-elements-10m-benjie",children:"last night's WG meeting"}),". It does need to be stacked since it also adds the ordering details to Appendix A (originally we thought it might be able to be separate)."]}),"\n",(0,i.jsx)(t.p,{children:"The previous PR in this stack is:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"#1102"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The next PR in this stack is:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"#1063"}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>a});var i=n(7294);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);