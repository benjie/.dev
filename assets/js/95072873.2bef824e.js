"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[5925],{8743:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var i=n(5893),r=n(1151);const a={identifier:"510",title:"Allow directives on variable definitions",stage:"3",champion:"mjmahone",prUrl:"https://github.com/graphql/graphql-spec/pull/510",events:[{type:"prCreated",date:new Date("2018-08-29T22:20:18.000Z"),href:"https://github.com/graphql/graphql-spec/pull/510",actor:"mjmahone"},{type:"commitsPushed",date:new Date("2018-08-29T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/bc4901d15a07d60fa40d96ee6f299277af449fc5",actor:"mjmahone",commits:[{href:"https://github.com/graphql/graphql-spec/commit/bc4901d15a07d60fa40d96ee6f299277af449fc5",headline:"[RFC] Allow directives on variable definitions",ghUser:"mjmahone",authorName:"Matt Mahoney"}]}],shortname:"Allow directives on variable definitions",image:"/img/rfc_tracker.png",closedAt:new Date("2018-10-01T20:58:10.000Z"),mergedAt:new Date("2018-10-01T20:58:10.000Z"),mergedBy:"leebyron",nextStage:!1},s=void 0,o={id:"510",title:"Allow directives on variable definitions",description:"At a glance",source:"@site/rfcs/510.md",sourceDirName:".",slug:"/510",permalink:"/rfcs/510",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"510",title:"Allow directives on variable definitions",stage:"3",champion:"mjmahone",prUrl:"https://github.com/graphql/graphql-spec/pull/510",events:[{type:"prCreated",date:"2018-08-29T22:20:18.000Z",href:"https://github.com/graphql/graphql-spec/pull/510",actor:"mjmahone"},{type:"commitsPushed",date:"2018-08-29T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/bc4901d15a07d60fa40d96ee6f299277af449fc5",actor:"mjmahone",commits:[{href:"https://github.com/graphql/graphql-spec/commit/bc4901d15a07d60fa40d96ee6f299277af449fc5",headline:"[RFC] Allow directives on variable definitions",ghUser:"mjmahone",authorName:"Matt Mahoney"}]}],shortname:"Allow directives on variable definitions",image:"/img/rfc_tracker.png",closedAt:"2018-10-01T20:58:10.000Z",mergedAt:"2018-10-01T20:58:10.000Z",mergedBy:"leebyron",nextStage:!1},sidebar:"rfcsSidebar",previous:{title:"Avoid parse ambiguity on types & extensions",permalink:"/rfcs/598"},next:{title:'"Directive order is significant" section',permalink:"/rfcs/470"}},l={},c=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Identifier"}),": #510"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Stage"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-3-accepted",children:"RFC3: Accepted"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Champion"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/mjmahone",children:"@mjmahone"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"PR"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/510",children:"Allow directives on variable definitions"})]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"timeline",children:"Timeline"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/510",children:"Spec PR"})," created"]})," on 2018-08-29 by mjmahone"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/bc4901d15a07d60fa40d96ee6f299277af449fc5",children:"[RFC] Allow directives on variable definitions"})," on 2018-08-29 by ",(0,i.jsx)(t.a,{href:"https://github.com/mjmahone",children:"@mjmahone"})]}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"Redo of #486. Will wait for discussion at the next WG meeting."}),"\n",(0,i.jsxs)(t.p,{children:["This is currently implemented under a feature flag in ",(0,i.jsx)(t.code,{children:"graphql-js"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-js/blob/master/src/language/parser.js#L128",children:"https://github.com/graphql/graphql-js/blob/master/src/language/parser.js#L128"})]}),"\n",(0,i.jsx)(t.p,{children:"Now that directives are gaining more widespread adoption, there have been multiple use cases I've seen where people want directives on variable definitions, but have to resort instead to adding them on the query definition with arguments."}),"\n",(0,i.jsx)(t.p,{children:"An example of this: some query variable may only make sense for the client. As an example, if you have a local cache and you need a variable to differentiate different runs of the same query against that cahce. Or if you have a query being run with a different set of fragments, but the client code initiating that query needs to conform to the same API. The way to describe this might be:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"query SomeQuery(\n  $client_var: Boolean = false @client_only\n  $server_var: Boolean = true\n) { ... }\n"})}),"\n",(0,i.jsx)(t.p,{children:"The client could strip $client_var\u200b before persisting it to the server as"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"query SomeQuery(\n  $server_var: Boolean = true\n) { ... }\n"})}),"\n",(0,i.jsx)(t.p,{children:"With our current set of directive locations, this would have to be implemented on the query definition like:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"query SomeQuery(\n  $client_var: Boolean = false\n  $server_var: Boolean = true\n) @client_only(variables: ['client_var']) { ... }\n"})}),"\n",(0,i.jsx)(t.p,{children:"This version has a lot more validation that needs to happen (for instance, that the string argument provided is actually a variable defined on the query), and is more disconnected from the intention: to strip the client-only variable, you now have to visit all of the query's variables, rather than just stripping the node that explicitly has the directive on it."}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>s});var i=n(7294);const r={},a=i.createContext(r);function s(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);