"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[852],{6267:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var r=t(5893),a=t(1151);const s={identifier:"998",title:"add spec edits for references",stage:"0",champion:"yaacovCR",prUrl:"https://github.com/graphql/graphql-spec/pull/998",events:[{type:"prCreated",date:new Date("2022-11-03T18:17:10.000Z"),href:"https://github.com/graphql/graphql-spec/pull/998",actor:"yaacovCR"},{type:"commitsPushed",date:new Date("2022-11-02T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/f98ca57a97275d39a12d146adce2d366494b25ee",actor:"yaacovCR",commits:[{href:"https://github.com/graphql/graphql-spec/commit/f98ca57a97275d39a12d146adce2d366494b25ee",headline:"add spec edits for references",ghUser:"yaacovCR",authorName:"Yaacov Rydzinski"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2022/11-Nov/wg-secondary-apac.md",date:"2022-11",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2022/2022-11.md",date:"2022-11",actor:null}],related:"999",shortname:"add spec edits for references",image:"/img/rfc_tracker.png"},l=void 0,i={id:"998",title:"add spec edits for references",description:"At a glance",source:"@site/rfcs/998.md",sourceDirName:".",slug:"/998",permalink:"/rfcs/998",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"998",title:"add spec edits for references",stage:"0",champion:"yaacovCR",prUrl:"https://github.com/graphql/graphql-spec/pull/998",events:[{type:"prCreated",date:"2022-11-03T18:17:10.000Z",href:"https://github.com/graphql/graphql-spec/pull/998",actor:"yaacovCR"},{type:"commitsPushed",date:"2022-11-02T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/f98ca57a97275d39a12d146adce2d366494b25ee",actor:"yaacovCR",commits:[{href:"https://github.com/graphql/graphql-spec/commit/f98ca57a97275d39a12d146adce2d366494b25ee",headline:"add spec edits for references",ghUser:"yaacovCR",authorName:"Yaacov Rydzinski"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2022/11-Nov/wg-secondary-apac.md",date:"2022-11",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2022/2022-11.md",date:"2022-11",actor:null}],related:"999",shortname:"add spec edits for references",image:"/img/rfc_tracker.png"},sidebar:"rfcsSidebar",previous:{title:"Fragment Arguments: RFC + Implementation Details",permalink:"/rfcs/wg1239"},next:{title:"Opt-in features",permalink:"/rfcs/OptInFeatures"}},c={},d=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Identifier"}),": #998"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stage"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-0-strawman",children:"RFC0: Strawman"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Champion"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/yaacovCR",children:"@yaacovCR"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PR"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/pull/998",children:"add spec edits for references"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Related"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/rfcs/999",title:"introduce ExecuteGroupedFieldSet, CollectRootFields and CollectSubfields / RFCX",children:"#999"})," (introduce ExecuteGroupedFieldSet, CollectRootFields and CollectSubfields)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"timeline",children:"Timeline"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/pull/998",children:"Spec PR"})," created"]})," on 2022-11-03 by yaacovCR"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Commit pushed"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-spec/commit/f98ca57a97275d39a12d146adce2d366494b25ee",children:"add spec edits for references"})," on 2022-11-02 by ",(0,r.jsx)(n.a,{href:"https://github.com/yaacovCR",children:"@yaacovCR"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Added to ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2022/11-Nov/wg-secondary-apac.md",children:"2022-11 WG agenda"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Mentioned in ",(0,r.jsx)(n.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2022/2022-11.md",children:"2022-11 WG notes"})]})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["References (soft aliases?) are an alternative syntax for fragment metafields such as ",(0,r.jsx)(n.code,{children:"__fulfilled"})]}),"\n",(0,r.jsx)(n.p,{children:"The goal is to create an easily manageable way of requesting different types of fragment spread signals. Multiple metafields or signals will likely be necessary, as after incremental delivery lands, operation writers might be interested in whether a spread has been collected, which can be signaled immediately, or whether all of its fields have been delivered, which may happen only later if the spread has been deferred."}),"\n",(0,r.jsx)(n.p,{children:'references collect all of these potential signals into a single locus within the response ("the reference") and use "selection set"-style syntax to indicate which signals are of interest. For example, after incremental delivery lands, the following might be valid:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"query FragmentReferences {\n  nodes(ids: [1, 42]) {\n    id\n    UserFields { selected }: ...userFragment\n    SuperUserFields { selected completed}: ...superUserFragment @defer\n  }\n}\n\nfragment userFragment on User {\n  friends {\n    count\n  }\n}\n\nfragment superUserFragment on SuperUser {\n  privilegeLevel\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This would yield the following ",(0,r.jsx)(n.code,{children:"data"})," right away:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "nodes": [\n    {\n      "id": 1,\n      "UserFields": { "selected": null },\n      "friends": { "count": 1234 }\n    },\n    {\n      "id": 42,\n      "UserFields": { "selected": null },\n      "friends": { "count": 5678 },\n      "SuperUserFields": { "selected": null },\n    }\n  ]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["And the following additional payload at path ",(0,r.jsx)(n.code,{children:"nodes.1"})," when the deferred fields complete:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "SuperUserFields": { "completed": null },\n  "privilegeLevel": 20\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:'The existing spec edits only describe the "selected" signal. I am working on the completed signal alongside a version of incremental delivery that does not branch execution or duplicate fields.'}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>l});var r=t(7294);const a={},s=r.createContext(a);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);