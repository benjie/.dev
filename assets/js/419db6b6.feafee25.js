"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[1408],{450:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var a=n(5893),r=n(1151);const i={identifier:"1157",closedAt:new Date("2025-04-03T13:58:48.000Z"),mergedAt:null,title:"Exclude custom scalar literals from validation",stage:"0",champion:"martinbonnin",prUrl:"https://github.com/graphql/graphql-spec/pull/1157",events:[{type:"prCreated",date:new Date("2025-04-02T21:17:15.000Z"),href:"https://github.com/graphql/graphql-spec/pull/1157",actor:"martinbonnin"},{type:"commitsPushed",date:new Date("2025-04-02T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/41382b0012f35dd37018a2257b0ab6fba369afaa",actor:"martinbonnin",commits:[{href:"https://github.com/graphql/graphql-spec/commit/41382b0012f35dd37018a2257b0ab6fba369afaa",headline:"Exclude custom scalar literals from validation",ghUser:"martinbonnin",authorName:"Martin Bonnin"}]}],related:"1118",shortname:"Exclude custom scalar literals from validation",image:"/img/rfc_tracker.png"},l=void 0,s={id:"1157",title:"Exclude custom scalar literals from validation",description:"At a glance",source:"@site/rfcs/1157.md",sourceDirName:".",slug:"/1157",permalink:"/rfcs/1157",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"1157",closedAt:"2025-04-03T13:58:48.000Z",mergedAt:null,title:"Exclude custom scalar literals from validation",stage:"0",champion:"martinbonnin",prUrl:"https://github.com/graphql/graphql-spec/pull/1157",events:[{type:"prCreated",date:"2025-04-02T21:17:15.000Z",href:"https://github.com/graphql/graphql-spec/pull/1157",actor:"martinbonnin"},{type:"commitsPushed",date:"2025-04-02T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/41382b0012f35dd37018a2257b0ab6fba369afaa",actor:"martinbonnin",commits:[{href:"https://github.com/graphql/graphql-spec/commit/41382b0012f35dd37018a2257b0ab6fba369afaa",headline:"Exclude custom scalar literals from validation",ghUser:"martinbonnin",authorName:"Martin Bonnin"}]}],related:"1118",shortname:"Exclude custom scalar literals from validation",image:"/img/rfc_tracker.png"},sidebar:"rfcsSidebar",previous:{title:"inputUnion type",permalink:"/rfcs/395"},next:{title:"GraphQL Subscriptions should handle errors in the source stream",permalink:"/rfcs/1126"}},c={},o=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Identifier"}),": #1157"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Stage"}),": ",(0,a.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-x-rejected",children:"RFCX: Closed"})," 2025-04-03T13:58:48Z"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Champion"}),": ",(0,a.jsx)(t.a,{href:"https://github.com/martinbonnin",children:"@martinbonnin"})]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"PR"}),": ",(0,a.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1157",children:"Exclude custom scalar literals from validation"})]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"timeline",children:"Timeline"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsxs)(t.strong,{children:[(0,a.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1157",children:"Spec PR"})," created"]})," on 2025-04-02 by martinbonnin"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,a.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/41382b0012f35dd37018a2257b0ab6fba369afaa",children:"Exclude custom scalar literals from validation"})," on 2025-04-02 by ",(0,a.jsx)(t.a,{href:"https://github.com/martinbonnin",children:"@martinbonnin"})]}),"\n"]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["See ",(0,a.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1118/files#r2023188399",children:"https://github.com/graphql/graphql-spec/pull/1118/files#r2023188399"})]}),"\n",(0,a.jsx)(t.p,{children:"When validating a document, the custom scalar coercion rules are not always known. In those cases, it's impossible to validate them."}),"\n",(0,a.jsxs)(t.p,{children:["For an example, with this operation, it's impossible to detect that ",(0,a.jsx)(t.code,{children:'"InvalidDate"'})," is not a valid ",(0,a.jsx)(t.code,{children:"Date"})," without knowledge of the coercing rules:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-graphql",children:'{\n  events(after: "InvalidDate") {\n    title\n    startsAt\n  }\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"I think (but wouldn't bet on it) that this is already the case in graphql-js for an example?"}),"\n",(0,a.jsx)(t.p,{children:"Excluding those from the validation feels like a better reflection of the current state of things albeit probably a spec change."}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>l});var a=n(7294);const r={},i=a.createContext(r);function l(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);