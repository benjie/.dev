"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[2558],{6847:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=i(5893),r=i(1151);const o={identifier:"1183",closedAt:null,mergedAt:null,title:'Fix "response position" definition; clarify sibling errors on propagation',stage:"0",nextStage:!1,champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1183",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/07-Jul/17-wg-secondary-eu.md",date:new Date("2025-07-17T00:00:00.000Z"),actor:null},{type:"prCreated",date:new Date("2025-07-10T12:55:34.000Z"),href:"https://github.com/graphql/graphql-spec/pull/1183",actor:"benjie"},{type:"commitsPushed",date:new Date("2025-07-10T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/47a9ca93b6412c431b014b51c7c825eb1599eebc",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/47a9ca93b6412c431b014b51c7c825eb1599eebc",headline:"Clarify definition of response position",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/67f07f7d8d4a3b08c9a444b280031816d4add602",headline:'Clarify it\'s the "path" of the error that matters, not the position t\u2026',ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/4d6f01bc0d40d778f7e4c7241ad6956a655c5fa6",headline:"Rename response position to execution position",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:'Fix "response position" definition; clarify sibling errors on propagation',image:"/img/rfc_tracker.png"},s=void 0,a={id:"1183",title:'Fix "response position" definition; clarify sibling errors on propagation',description:"At a glance",source:"@site/rfcs/1183.md",sourceDirName:".",slug:"/1183",permalink:"/rfcs/1183",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"1183",closedAt:null,mergedAt:null,title:'Fix "response position" definition; clarify sibling errors on propagation',stage:"0",nextStage:!1,champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1183",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/07-Jul/17-wg-secondary-eu.md",date:"2025-07-17T00:00:00.000Z",actor:null},{type:"prCreated",date:"2025-07-10T12:55:34.000Z",href:"https://github.com/graphql/graphql-spec/pull/1183",actor:"benjie"},{type:"commitsPushed",date:"2025-07-10T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/47a9ca93b6412c431b014b51c7c825eb1599eebc",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/47a9ca93b6412c431b014b51c7c825eb1599eebc",headline:"Clarify definition of response position",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/67f07f7d8d4a3b08c9a444b280031816d4add602",headline:'Clarify it\'s the "path" of the error that matters, not the position t\u2026',ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/4d6f01bc0d40d778f7e4c7241ad6956a655c5fa6",headline:"Rename response position to execution position",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:'Fix "response position" definition; clarify sibling errors on propagation',image:"/img/rfc_tracker.png"},sidebar:"rfcsSidebar",previous:{title:"Allow singular variables in list locations",permalink:"/rfcs/509"},next:{title:"Sibling errors should not be added after propagation",permalink:"/rfcs/1184"}},h={},l=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Identifier"}),": #1183"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Stage"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-0-strawman",children:"RFC0: Strawman"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Champion"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"PR"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1183",children:'Fix "response position" definition; clarify sibling errors on propagation'})]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"timeline",children:"Timeline"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/07-Jul/17-wg-secondary-eu.md",children:"2025-07-17 WG agenda"})]})}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1183",children:"Spec PR"})," created"]})," on 2025-07-10 by benjie"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"3 commits pushed"})," on 2025-07-10:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/47a9ca93b6412c431b014b51c7c825eb1599eebc",children:"Clarify definition of response position"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/67f07f7d8d4a3b08c9a444b280031816d4add602",children:'Clarify it\'s the "path" of the error that matters, not the position t\u2026'})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/4d6f01bc0d40d778f7e4c7241ad6956a655c5fa6",children:"Rename response position to execution position"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[":: A ",(0,n.jsx)(t.em,{children:"response position"})," is a uniquely identifiable position in the response\ndata produced during execution. It is either a direct entry in the {resultMap}\nof a {ExecuteSelectionSet()}, or it is a position in a (potentially nested) List\nvalue. Each response position is uniquely identifiable via a ",(0,n.jsx)(t.em,{children:"response path"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["The intention of ",(0,n.jsx)(t.em,{children:"response position"})," is that it includes things that were elided by error propagation; e.g. if you query ",(0,n.jsx)(t.code,{children:"{ a { b } }"})," and ",(0,n.jsx)(t.code,{children:"b"})," is non-null and throws, the result will be ",(0,n.jsx)(t.code,{children:"{a: null}"})," but the error will have path ",(0,n.jsx)(t.code,{children:'["a", "b"]'})," indicating the ",(0,n.jsx)(t.code,{children:"a.b"})," response position even though that position does not actually exist in the response."]}),"\n",(0,n.jsxs)(t.p,{children:["(Also: ",(0,n.jsx)(t.code,{children:"ExecuteSelectionSet()"})," doesn't exist any more.)"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Commit 1"}),": clarify definition of response position to include these omitted values."]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["If a ",(0,n.jsx)(t.em,{children:"response position"}),' resolves to {null} because of an execution error which\nhas already been added to the {"errors"} list in the ',(0,n.jsx)(t.em,{children:"execution result"}),', the\n{"errors"} list must not be further affected. That is, only one error should be\nadded to the errors list per ',(0,n.jsx)(t.em,{children:"response position"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["But the ",(0,n.jsx)(t.em,{children:"response position"})," mentioned at the beginning of this paragraph ",(0,n.jsx)(t.em,{children:"is different to"}),' the response position from which the error originated; therefore "only one error should be added to the errors list per ',(0,n.jsx)(t.em,{children:"response position"}),'" is kind of moot. Actually what we mean here is that the ',(0,n.jsx)(t.em,{children:"response path"}),' of the error (i.e. the "path" entry in the error object) should be unique.']}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Commit 2"}),': clarify it\'s the "path" of the error that matters, not the position that re-raised it']}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.p,{children:'The use of the term "response position" is confusing, because that position might not actually exist in the response if it was omitted due to error propagation.'}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Commit 3"}),": rename ",(0,n.jsx)(t.code,{children:"response position"})," to ",(0,n.jsx)(t.code,{children:"execution position"})," throughout."]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.p,{children:"All of this together clarifies what happens when an error occurs to a nullable sibling of a non-nullable field that triggers error propagation."}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>a,a:()=>s});var n=i(7294);const r={},o=n.createContext(r);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);