"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[3384],{1391:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>s,contentTitle:()=>n,default:()=>o,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var a=t(5893),h=t(1151);const r={identifier:"1018",title:"Alternative proposal for `@stream`/`@defer`",stage:"X",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1018",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/04-Apr/06-wg-primary.md",date:new Date("2023-04-06T00:00:00.000Z"),actor:null},{type:"prCreated",date:new Date("2023-03-06T15:45:00.000Z"),href:"https://github.com/graphql/graphql-spec/pull/1018",actor:"benjie"},{type:"commitsPushed",date:new Date("2023-03-06T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/f664dc9dd3965e5421551fd5d2b8859697d183db",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/f664dc9dd3965e5421551fd5d2b8859697d183db",headline:"defers is a map, streams is a list, they are both recursively merged",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/1b1962c089a7a8d88ad178e09cb5d71eb8abee5e",headline:"Defers are progressing well",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/6e3554f71b9f30cc5e55918b6f8e5cd367720847",headline:"Clear unused code",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/4378cb4285dc65758e3efe19f3da335429ed5bd2",headline:"Minor fixes",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/47556fae56a0bc64a5fe9163d7b7664862a84bed",headline:"Stream",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/fc574e58db6d3d34db9ae3d88571836995f218c3",headline:"Scope issue",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/159523da644966f11a7ab3cb420905d91240ce2a",headline:"Remove duplicate ExecuteField",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/162fa68c045ef5c62d65aad2159ceb47b4b3c560",headline:"Consistency",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/3b646e201b1223fea89d16fd925d904953a938d2",headline:"Else -> otherwise",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/565be265e28c2102ff6129f1d60c2205a0c4137f",headline:"Wording tweaks",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/df8af06cecde71785dc7481962614b5bfed93cb2",headline:"Copy/paste error",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/3da431c22ed281da61d3d5ac894c2ccdea215ace",headline:"More consistent with subscriptions",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/b9d0e38551a3a2ce370e626257b723343fb2d4c4",headline:"Replace hideous words with an even more hideous algorithm",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/135ba54c5e8342261530f7c8caf87e0903777e48",headline:"Add a helpful note",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/68e76571d7ea7f13a25e861d92bddfbc7f34778b",headline:"Consistently use 'be the result of running'",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/8f1ce0464a088b95b6e033817bdd2032ca502587",headline:"Typo",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/6aa7107712889bac599db841a61dc08234da4d01",headline:"Simplify",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/782f8b677cfa8710b651d833b70289d09c3d1ab5",headline:"Sets aren't typically ordered, use a list.",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/df84d1b4ae03f8466c9291b64870d242b3473fb2",headline:"Hyphen",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:new Date("2023-03-04T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/c58adce6eaed8e7bca5295e2483fe72aceec5755",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/c58adce6eaed8e7bca5295e2483fe72aceec5755",headline:"Root-level logic for incremental",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/e4be72f3e464727bef5c165da66723bfa56c3fb1",headline:"Start thinking about tracking deferred",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/c2d1693f457d2b6c5fac6e41e5fc438d31f48bb8",headline:"Clearer @stream with initialCount",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"Alternative proposal for `@stream`/`@defer`",image:"/img/rfc_tracker.png",closedAt:new Date("2023-04-27T10:37:44.000Z"),nextStage:!1},n=void 0,c={id:"1018",title:"Alternative proposal for `@stream`/`@defer`",description:"At a glance",source:"@site/rfcs/1018.md",sourceDirName:".",slug:"/1018",permalink:"/rfcs/1018",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"1018",title:"Alternative proposal for `@stream`/`@defer`",stage:"X",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1018",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/04-Apr/06-wg-primary.md",date:"2023-04-06T00:00:00.000Z",actor:null},{type:"prCreated",date:"2023-03-06T15:45:00.000Z",href:"https://github.com/graphql/graphql-spec/pull/1018",actor:"benjie"},{type:"commitsPushed",date:"2023-03-06T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/f664dc9dd3965e5421551fd5d2b8859697d183db",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/f664dc9dd3965e5421551fd5d2b8859697d183db",headline:"defers is a map, streams is a list, they are both recursively merged",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/1b1962c089a7a8d88ad178e09cb5d71eb8abee5e",headline:"Defers are progressing well",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/6e3554f71b9f30cc5e55918b6f8e5cd367720847",headline:"Clear unused code",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/4378cb4285dc65758e3efe19f3da335429ed5bd2",headline:"Minor fixes",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/47556fae56a0bc64a5fe9163d7b7664862a84bed",headline:"Stream",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/fc574e58db6d3d34db9ae3d88571836995f218c3",headline:"Scope issue",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/159523da644966f11a7ab3cb420905d91240ce2a",headline:"Remove duplicate ExecuteField",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/162fa68c045ef5c62d65aad2159ceb47b4b3c560",headline:"Consistency",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/3b646e201b1223fea89d16fd925d904953a938d2",headline:"Else -> otherwise",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/565be265e28c2102ff6129f1d60c2205a0c4137f",headline:"Wording tweaks",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/df8af06cecde71785dc7481962614b5bfed93cb2",headline:"Copy/paste error",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/3da431c22ed281da61d3d5ac894c2ccdea215ace",headline:"More consistent with subscriptions",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/b9d0e38551a3a2ce370e626257b723343fb2d4c4",headline:"Replace hideous words with an even more hideous algorithm",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/135ba54c5e8342261530f7c8caf87e0903777e48",headline:"Add a helpful note",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/68e76571d7ea7f13a25e861d92bddfbc7f34778b",headline:"Consistently use 'be the result of running'",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/8f1ce0464a088b95b6e033817bdd2032ca502587",headline:"Typo",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/6aa7107712889bac599db841a61dc08234da4d01",headline:"Simplify",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/782f8b677cfa8710b651d833b70289d09c3d1ab5",headline:"Sets aren't typically ordered, use a list.",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/df84d1b4ae03f8466c9291b64870d242b3473fb2",headline:"Hyphen",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:"2023-03-04T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/c58adce6eaed8e7bca5295e2483fe72aceec5755",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/c58adce6eaed8e7bca5295e2483fe72aceec5755",headline:"Root-level logic for incremental",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/e4be72f3e464727bef5c165da66723bfa56c3fb1",headline:"Start thinking about tracking deferred",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/c2d1693f457d2b6c5fac6e41e5fc438d31f48bb8",headline:"Clearer @stream with initialCount",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"Alternative proposal for `@stream`/`@defer`",image:"/img/rfc_tracker.png",closedAt:"2023-04-27T10:37:44.000Z",nextStage:!1},sidebar:"rfcsSidebar",previous:{title:"Enable 'schema' keyword to be provided without root operations",permalink:"/rfcs/1166"},next:{title:"Allow recursion within ResolveAbstractType",permalink:"/rfcs/960"}},s={},l=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function d(e){const i={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,h.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Identifier"}),": #1018"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Stage"}),": ",(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-x-rejected",children:"RFCX: Closed"})," 2023-04-27T10:37:44Z"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Champion"}),": ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"PR"}),": ",(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/pull/1018",children:"Alternative proposal for `@stream`/`@defer`"})]}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"timeline",children:"Timeline"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:(0,a.jsxs)(i.strong,{children:["Added to ",(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/04-Apr/06-wg-primary.md",children:"2023-04-06 WG agenda"})]})}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsxs)(i.strong,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/pull/1018",children:"Spec PR"})," created"]})," on 2023-03-06 by benjie"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"19 commits pushed"})," on 2023-03-06:","\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/f664dc9dd3965e5421551fd5d2b8859697d183db",children:"defers is a map, streams is a list, they are both recursively merged"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/1b1962c089a7a8d88ad178e09cb5d71eb8abee5e",children:"Defers are progressing well"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/6e3554f71b9f30cc5e55918b6f8e5cd367720847",children:"Clear unused code"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/4378cb4285dc65758e3efe19f3da335429ed5bd2",children:"Minor fixes"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/47556fae56a0bc64a5fe9163d7b7664862a84bed",children:"Stream"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/fc574e58db6d3d34db9ae3d88571836995f218c3",children:"Scope issue"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/159523da644966f11a7ab3cb420905d91240ce2a",children:"Remove duplicate ExecuteField"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/162fa68c045ef5c62d65aad2159ceb47b4b3c560",children:"Consistency"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/3b646e201b1223fea89d16fd925d904953a938d2",children:"Else -> otherwise"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/565be265e28c2102ff6129f1d60c2205a0c4137f",children:"Wording tweaks"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/df8af06cecde71785dc7481962614b5bfed93cb2",children:"Copy/paste error"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/3da431c22ed281da61d3d5ac894c2ccdea215ace",children:"More consistent with subscriptions"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/b9d0e38551a3a2ce370e626257b723343fb2d4c4",children:"Replace hideous words with an even more hideous algorithm"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/135ba54c5e8342261530f7c8caf87e0903777e48",children:"Add a helpful note"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/68e76571d7ea7f13a25e861d92bddfbc7f34778b",children:"Consistently use 'be the result of running'"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/8f1ce0464a088b95b6e033817bdd2032ca502587",children:"Typo"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/6aa7107712889bac599db841a61dc08234da4d01",children:"Simplify"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/782f8b677cfa8710b651d833b70289d09c3d1ab5",children:"Sets aren't typically ordered, use a list."})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/df84d1b4ae03f8466c9291b64870d242b3473fb2",children:"Hyphen"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"3 commits pushed"})," on 2023-03-04:","\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/c58adce6eaed8e7bca5295e2483fe72aceec5755",children:"Root-level logic for incremental"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/e4be72f3e464727bef5c165da66723bfa56c3fb1",children:"Start thinking about tracking deferred"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.a,{href:"https://github.com/graphql/graphql-spec/commit/c2d1693f457d2b6c5fac6e41e5fc438d31f48bb8",children:"Clearer @stream with initialCount"})," by ",(0,a.jsx)(i.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsxs)(i.blockquote,{children:["\n",(0,a.jsx)(i.p,{children:"This RFC is an alternative solution to incremental delivery. This is a very early draft to enable sharing this solution with the incremental delivery working group, and, if ratified, may either be merged into @robrichard et al's excellent work in #742, or supersede it."}),"\n",(0,a.jsx)(i.p,{children:"This PR currently only addresses the algorithms in the execution part of the specification (and is based off of a recent draft of the GraphQL specification, rather than any preceding work), so for accompanying specification text regarding the syntax and directives of incremental delivery, please see the excellent prior work in #742."}),"\n",(0,a.jsx)(i.p,{children:"The goal of this proposal is to address the needs of incremental delivery whilst:"}),"\n",(0,a.jsxs)(i.ol,{children:["\n",(0,a.jsxs)(i.li,{children:["Ensuring that the resolver at each path in the response is called at most once, to ensure that the individual payloads in an incremental delivery stream can always be reconciled into a final object that would be equivalent to the object that could be produced by removing all the ",(0,a.jsx)(i.code,{children:"@stream"})," and ",(0,a.jsx)(i.code,{children:"@defer"})," directives from the request."]}),"\n",(0,a.jsxs)(i.li,{children:["Ensuring that contents of a ",(0,a.jsx)(i.code,{children:"@defer"}),"'d or ",(0,a.jsx)(i.code,{children:"@stream"}),"'d selection set are sent atomically in a single event, such that ",(0,a.jsx)(i.code,{children:"MyFragment: __typename"})," and other fragment identification approaches can be relied upon to confirm that the entire fragment is present."]}),"\n",(0,a.jsx)(i.li,{children:"Avoiding duplicate delivery of leaves in order to reduce both network traffic, and memory load/redundant processing on client and server."}),"\n",(0,a.jsx)(i.li,{children:"Ensuring that you know if there is still pending data under a given path in the response."}),"\n",(0,a.jsx)(i.li,{children:"Allowing multiple streamed/deferred responses to be batched together into the same event to minimize client workload and reduce network traffic."}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Non-goals of this proposal are:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["Ensuring that you can check on the status of a specific ",(0,a.jsx)(i.code,{children:"@stream"})," or ",(0,a.jsx)(i.code,{children:"@defer"})," directives issued in the request.","\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["There is generally not a one-to-one relationship between ",(0,a.jsx)(i.code,{children:"@stream"}),"/",(0,a.jsx)(i.code,{children:"@defer"})," directives in the request and any components in the response."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["Allowing you to to set the priority of sibling ",(0,a.jsx)(i.code,{children:"@defer"}),"s","\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"There are no sibling defers, only nested defers"}),"\n",(0,a.jsxs)(i.li,{children:["Currently ",(0,a.jsx)(i.code,{children:"... @defer { ... @defer { a } }"})," is equivalent to ",(0,a.jsx)(i.code,{children:"... @defer { a }"}),", but we might change this."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(i.p,{children:["The significant change in this RFC is that it is built around the field merging algorithm that we already have, and allows merging ",(0,a.jsx)(i.code,{children:"@defer"}),'s not just within a single selection set, but across the entire request. It works based on "defer layers" - thus for a query such as:']}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-graphql",children:"{\n  a {\n    b\n    ... @defer { c { c1 } }\n    d {\n      e\n      ... @defer { f }\n    }\n  }\n  g\n  ... @defer {\n    a {\n     c {\n       ... @defer { c2 }\n     }\n    }\n    h\n  }\n}\n"})}),"\n",(0,a.jsx)(i.p,{children:"The first query to be resolved is as before:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-graphql",children:"{\n  a {\n    b\n    d {\n      e\n    }\n  }\n  g\n}\n"})}),"\n",(0,a.jsx)(i.p,{children:"Yielding something like:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-json5",children:'{\n  data: {\n    a: {\n      b: "B",\n      d: {\n        e: "E"\n      }\n    },\n    g: "G"\n  },\n  pending: [\n    { id: 0, path: [] }\n  ],\n  hasNext: true\n}\n'})}),"\n",(0,a.jsxs)(i.p,{children:["Next the ",(0,a.jsxs)(i.em,{children:["first layer of ",(0,a.jsx)(i.code,{children:"@defer"}),"'d leaves"]})," is evaluated, which results in the following selection sets being evaluated at the following paths:"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["path: ",(0,a.jsx)(i.code,{children:"[]"}),", selection: ",(0,a.jsx)(i.code,{children:"{ h }"})]}),"\n",(0,a.jsxs)(i.li,{children:["path: ",(0,a.jsx)(i.code,{children:"['a']"}),", selection: ",(0,a.jsx)(i.code,{children:"{ c { c1 } }"})]}),"\n",(0,a.jsxs)(i.li,{children:["path: ",(0,a.jsx)(i.code,{children:"['a', 'd']"}),", selection: ",(0,a.jsx)(i.code,{children:"{ f }"})]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"All three of these are evaluated (separately, in parallel) and then grouped together into the same event, something like:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-json5",children:"{\n  incremental: [\n    { path: [], data: { h: \"H\" } },\n    { path: ['a'], data: { c: { c1: \"C1\" } } },\n    { path: ['a', 'd'], data: { f: \"F\" } }\n  ],\n  completed: [\n    { id: 0 }\n  ],\n  pending: [\n    { id: 1, path: ['a', 'c'] }\n  ],\n  hasNext: true\n}\n"})}),"\n",(0,a.jsxs)(i.p,{children:["Finally we look at the next layer of ",(0,a.jsx)(i.code,{children:"@defer"}),", which would yield:"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["path: ",(0,a.jsx)(i.code,{children:"['a', 'c']"}),", selection: ",(0,a.jsx)(i.code,{children:"{ c2 }"})]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Which would yield:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-json5",children:"{\n  incremental: [\n    { path: ['a', 'c'], data: { c2: \"C2\" } }\n  ],\n  completed: [\n    { id: 1 }\n  ],\n  hasNext: true\n}\n"})}),"\n",(0,a.jsx)(i.p,{children:"and finally:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-json5",children:"{\n  hasNext: false\n}\n"})}),"\n",(0,a.jsxs)(i.p,{children:["(Note: we can probably optimize this to put the ",(0,a.jsx)(i.code,{children:"hasNext: false"})," in the previous payload instead, but I've not yet tried to write that into the spec text.)"]}),"\n"]})]})}function o(e={}){const{wrapper:i}={...(0,h.a)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,i,t)=>{t.d(i,{Z:()=>c,a:()=>n});var a=t(7294);const h={},r=a.createContext(h);function n(e){const i=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(h):e.components||h:n(e.components),a.createElement(r.Provider,{value:i},e.children)}}}]);