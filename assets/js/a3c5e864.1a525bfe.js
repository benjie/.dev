"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[5141],{9475:e=>{e.exports=JSON.parse('{"pluginId":"rfcs","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"rfcsSidebar":[{"type":"link","label":"GraphQL RFC Tracker","href":"/rfcs/","docId":"index","unlisted":false},{"type":"link","label":"Activity","href":"/rfcs/activity","docId":"activity","unlisted":false},{"type":"category","label":"Stage 3: Accepted","collapsed":true,"collapsible":true,"items":[{"type":"link","label":"525: Allow deprecation of input values [RFC2]","href":"/rfcs/525","docId":"525","unlisted":false},{"type":"link","label":"823*: operation expressions [RFC0]","href":"/rfcs/823","docId":"823","unlisted":false},{"type":"link","label":"667: [RFC Sketch] Defer and Stream Directives [RFC0]","href":"/rfcs/667","docId":"667","unlisted":false},{"type":"link","label":"1073: Be strict about error paths format [RFC3]","href":"/rfcs/1073","docId":"1073","unlisted":false},{"type":"link","label":"987*: Fix ambiguity around when schema definition may be omitted [RFC3]","href":"/rfcs/987","docId":"987","unlisted":false},{"type":"link","label":"891: Add explanation about argument name uniqueness. [RFC3]","href":"/rfcs/891","docId":"891","unlisted":false},{"type":"link","label":"805: Allow deprecation of input values (field args, directive args, input fields) [RFC3]","href":"/rfcs/805","docId":"805","unlisted":false},{"type":"link","label":"849: Allow full unicode range [RFC3]","href":"/rfcs/849","docId":"849","unlisted":false},{"type":"link","label":"776*: __typename is not valid at subscription root [RFC3]","href":"/rfcs/776","docId":"776","unlisted":false},{"type":"link","label":"649: Custom Scalar Specification URLs [RFC3]","href":"/rfcs/649","docId":"649","unlisted":false},{"type":"link","label":"803*: Replace \'query error\' with \'request error\' [RFC3]","href":"/rfcs/803","docId":"803","unlisted":false},{"type":"link","label":"701: Disallow non-breakable chains of circular references in Input Objects [RFC3]","href":"/rfcs/701","docId":"701","unlisted":false},{"type":"link","label":"373: Allow interfaces to implement other interfaces [RFC3]","href":"/rfcs/373","docId":"373","unlisted":false},{"type":"link","label":"472: Repeatable directives [RFC3]","href":"/rfcs/472","docId":"472","unlisted":false},{"type":"link","label":"599: Clarify that lexing is greedy [RFC3]","href":"/rfcs/599","docId":"599","unlisted":false},{"type":"link","label":"601: Number value literal lookahead restrictions [RFC3]","href":"/rfcs/601","docId":"601","unlisted":false},{"type":"link","label":"598: Avoid parse ambiguity on types & extensions [RFC3]","href":"/rfcs/598","docId":"598","unlisted":false},{"type":"link","label":"510: Allow directives on variable definitions [RFC3]","href":"/rfcs/510","docId":"510","unlisted":false},{"type":"link","label":"470: \\"Directive order is significant\\" section [RFC3]","href":"/rfcs/470","docId":"470","unlisted":false},{"type":"link","label":"466: Add description to Schema [RFC3]","href":"/rfcs/466","docId":"466","unlisted":false},{"type":"link","label":"463: Ensure validation of directive arguments [RFC3]","href":"/rfcs/463","docId":"463","unlisted":false},{"type":"link","label":"462: Input & Output type definition [RFC3]","href":"/rfcs/462","docId":"462","unlisted":false},{"type":"link","label":"459: Remove Interface is implemented by 1+ Objects validation [RFC3]","href":"/rfcs/459","docId":"459","unlisted":false},{"type":"link","label":"454: Add validation steps for schema extensions [RFC3]","href":"/rfcs/454","docId":"454","unlisted":false}]},{"type":"category","label":"Stage 2: Draft","collapsed":false,"collapsible":true,"items":[{"type":"link","label":"825*: OneOf Input Objects [RFC2]","href":"/rfcs/825","docId":"825","unlisted":false},{"type":"link","label":"1102*: Define Data Collections used in the spec [RFC2]","href":"/rfcs/1102","docId":"1102","unlisted":false},{"type":"link","label":"1063*: Type system ordering of: object interfaces, directive arguments, input object fields, enum values [RFC2]","href":"/rfcs/1063","docId":"1063","unlisted":false},{"type":"link","label":"1092*: Recommend that order of unordered collections is maintained where possible [RFC2]","href":"/rfcs/1092","docId":"1092","unlisted":false},{"type":"link","label":"793*: Default value coercion rules [RFC2]","href":"/rfcs/793","docId":"793","unlisted":false},{"type":"link","label":"860*: Prevent @skip and @include on root subscription selection set [RFC2]","href":"/rfcs/860","docId":"860","unlisted":false},{"type":"link","label":"794: Schema Coordinates [RFC2]","href":"/rfcs/794","docId":"794","unlisted":false}]},{"type":"category","label":"Stage 1: Proposal","collapsed":false,"collapsible":true,"items":[{"type":"link","label":"1098: Add 5.2.4 Operation Type Exists [RFC1]","href":"/rfcs/1098","docId":"1098","unlisted":false},{"type":"link","label":"1081: Fragment arguments/variables (syntax/validation/execution) [RFC1]","href":"/rfcs/1081","docId":"1081","unlisted":false},{"type":"link","label":"976*: Add \'extensions\' to request [RFC1]","href":"/rfcs/976","docId":"976","unlisted":false},{"type":"link","label":"1053*: Implementations may not deprecate a field that the interface hasn\'t deprecated [RFC1]","href":"/rfcs/1053","docId":"1053","unlisted":false},{"type":"link","label":"1056*: Fix CoerceArgumentValues() hasValue [RFC1]","href":"/rfcs/1056","docId":"1056","unlisted":false},{"type":"link","label":"1058*: List coercion algorithm [RFC1]","href":"/rfcs/1058","docId":"1058","unlisted":false},{"type":"link","label":"1059*: Introduce Strict and Legacy All Variable Usages Are Allowed [RFC1]","href":"/rfcs/1059","docId":"1059","unlisted":false},{"type":"link","label":"997: Expand @deprecated to Objects [RFC1]","href":"/rfcs/997","docId":"997","unlisted":false},{"type":"link","label":"950: allow unions to include interfaces and unions [RFC1]","href":"/rfcs/950","docId":"950","unlisted":false},{"type":"link","label":"955: Add validation rule that operation types exist [RFC1]","href":"/rfcs/955","docId":"955","unlisted":false},{"type":"link","label":"939: allow unions to declare implementation of interfaces [RFC1]","href":"/rfcs/939","docId":"939","unlisted":false},{"type":"link","label":"907: Add support for directives on directives [RFC1]","href":"/rfcs/907","docId":"907","unlisted":false},{"type":"link","label":"892: Add descriptions to executable definitions [RFC1]","href":"/rfcs/892","docId":"892","unlisted":false},{"type":"link","label":"509: Allow singular variables in list locations [RFC1]","href":"/rfcs/509","docId":"509","unlisted":false}]},{"type":"category","label":"Stage 0: Strawman","collapsed":true,"collapsible":true,"items":[{"type":"link","label":"1057*: Fix coercion table for list [RFC0]","href":"/rfcs/1057","docId":"1057","unlisted":false},{"type":"link","label":"DeferStream: GraphQL Defer and Stream Directives [RFC0]","href":"/rfcs/DeferStream","docId":"DeferStream","unlisted":false},{"type":"link","label":"SchemaCoordinates: Schema Coordinates [RFC0]","href":"/rfcs/SchemaCoordinates","docId":"SchemaCoordinates","unlisted":false},{"type":"link","label":"1065*: SemanticNonNull type (null only on error) [RFC0]","href":"/rfcs/1065","docId":"1065","unlisted":false},{"type":"link","label":"ClientControlledNullability: Client Controlled Nullability [RFC0]","href":"/rfcs/ClientControlledNullability","docId":"ClientControlledNullability","unlisted":false},{"type":"link","label":"InputUnion: GraphQL Input Union [RFC0]","href":"/rfcs/InputUnion","docId":"InputUnion","unlisted":false},{"type":"link","label":"FeatureDiscovery: Feature Discovery [RFC0]","href":"/rfcs/FeatureDiscovery","docId":"FeatureDiscovery","unlisted":false},{"type":"link","label":"Struct: Polymorphic-capable composite symmetric input/output type (`struct`) [RFC0]","href":"/rfcs/Struct","docId":"Struct","unlisted":false},{"type":"link","label":"1049: Introduce SourceSchemaDocument and FullSchemaDocument [RFC0]","href":"/rfcs/1049","docId":"1049","unlisted":false},{"type":"link","label":"wg1410: Strict Semantic Nullability [RFC0]","href":"/rfcs/wg1410","docId":"wg1410","unlisted":false},{"type":"link","label":"1050*: Directive proposal for opting out of null bubbling [RFC0]","href":"/rfcs/1050","docId":"1050","unlisted":false},{"type":"link","label":"wg1394: True Nullability Schema [RFC0]","href":"/rfcs/wg1394","docId":"wg1394","unlisted":false},{"type":"link","label":"1045*: Remove fragmentSpreadName from visitedFragments when visit is complete [RFC0]","href":"/rfcs/1045","docId":"1045","unlisted":false},{"type":"link","label":"FullSchemas: Full Schemas [RFC0]","href":"/rfcs/FullSchemas","docId":"FullSchemas","unlisted":false},{"type":"link","label":"1015: \\"Root\\" Types clarity \u2192 \\"Operation Type\\" [RFC0]","href":"/rfcs/1015","docId":"1015","unlisted":false},{"type":"link","label":"FragmentArguments: Fragment Arguments [RFC0]","href":"/rfcs/FragmentArguments","docId":"FragmentArguments","unlisted":false},{"type":"link","label":"wg1239: Fragment Arguments: RFC + Implementation Details [RFC0]","href":"/rfcs/wg1239","docId":"wg1239","unlisted":false},{"type":"link","label":"998: add spec edits for references [RFC0]","href":"/rfcs/998","docId":"998","unlisted":false},{"type":"link","label":"OptInFeatures: Opt-in features [RFC0]","href":"/rfcs/OptInFeatures","docId":"OptInFeatures","unlisted":false},{"type":"link","label":"ExpandingSubtyping: Expanding Subtyping (for output types) [RFC0]","href":"/rfcs/ExpandingSubtyping","docId":"ExpandingSubtyping","unlisted":false},{"type":"link","label":"AnnotationStructs: Annotation Structs [RFC0]","href":"/rfcs/AnnotationStructs","docId":"AnnotationStructs","unlisted":false},{"type":"link","label":"MetadataStructs: Metadata Structs [RFC0]","href":"/rfcs/MetadataStructs","docId":"MetadataStructs","unlisted":false},{"type":"link","label":"wg1096: \\"Metadata Directives\\" Proposal [RFC0]","href":"/rfcs/wg1096","docId":"wg1096","unlisted":false},{"type":"link","label":"CompositeSchemas: GraphQL Composite Schemas [RFC0]","href":"/rfcs/CompositeSchemas","docId":"CompositeSchemas","unlisted":false},{"type":"link","label":"wg1071*: Struct type [RFC0]","href":"/rfcs/wg1071","docId":"wg1071","unlisted":false},{"type":"link","label":"960: Allow recursion within ResolveAbstractType [RFC0]","href":"/rfcs/960","docId":"960","unlisted":false},{"type":"link","label":"673: Servers must preserve lexical ordering between SDL and introspection [RFC0]","href":"/rfcs/673","docId":"673","unlisted":false},{"type":"link","label":"948*: OneOf Objects [RFC0]","href":"/rfcs/948","docId":"948","unlisted":false},{"type":"link","label":"wg944: New Intersection Type [RFC0]","href":"/rfcs/wg944","docId":"wg944","unlisted":false},{"type":"link","label":"wg857: Fragment Modularity [RFC0]","href":"/rfcs/wg857","docId":"wg857","unlisted":false},{"type":"link","label":"FragmentModularity: Fragment Modularity [RFC0]","href":"/rfcs/FragmentModularity","docId":"FragmentModularity","unlisted":false},{"type":"link","label":"wg815: Nested GraphQL Mutations [RFC0]","href":"/rfcs/wg815","docId":"wg815","unlisted":false},{"type":"link","label":"ImplicitInheritance: Implicit Inheritance [RFC0]","href":"/rfcs/ImplicitInheritance","docId":"ImplicitInheritance","unlisted":false},{"type":"link","label":"OperationExpressions: Operation Expressions [RFC0]","href":"/rfcs/OperationExpressions","docId":"OperationExpressions","unlisted":false},{"type":"link","label":"SchemaFragments: Schema Fragments [RFC0]","href":"/rfcs/SchemaFragments","docId":"SchemaFragments","unlisted":false},{"type":"link","label":"879: __fulfilled meta field [RFC0]","href":"/rfcs/879","docId":"879","unlisted":false},{"type":"link","label":"Subscriptions: NOTE: this document is kept for historic purposes; GraphQL Subscriptions have been specified and released as part of the official [June 2018 GraphQL Specification](https://spec.graphql.org/June2018/). [RFC0]","href":"/rfcs/Subscriptions","docId":"Subscriptions","unlisted":false},{"type":"link","label":"710: Add namedType and punctuatedName to __Type [RFC0]","href":"/rfcs/710","docId":"710","unlisted":false},{"type":"link","label":"706: Add support for directives for an object field name [RFC0]","href":"/rfcs/706","docId":"706","unlisted":false},{"type":"link","label":"674: allow empty selections [RFC0]","href":"/rfcs/674","docId":"674","unlisted":false},{"type":"link","label":"631: Make root query operation type optional [RFC0]","href":"/rfcs/631","docId":"631","unlisted":false},{"type":"link","label":"567: allow directives on directive definitions [RFC0]","href":"/rfcs/567","docId":"567","unlisted":false},{"type":"link","label":"556: Document Directives [RFC0]","href":"/rfcs/556","docId":"556","unlisted":false},{"type":"link","label":"521: Scalar serialize as built-in scalar type [RFC0]","href":"/rfcs/521","docId":"521","unlisted":false},{"type":"link","label":"325: Add \\"Any\\" scalar type [RFC0]","href":"/rfcs/325","docId":"325","unlisted":false}]},{"type":"category","label":"Stage X: Rejected","collapsed":true,"collapsible":true,"items":[{"type":"link","label":"1091*: Define Data Collections used in the spec [RFC2]","href":"/rfcs/1091","docId":"1091","unlisted":false},{"type":"link","label":"742: Spec edits for @defer/@stream [RFC2]","href":"/rfcs/742","docId":"742","unlisted":false},{"type":"link","label":"1010: Fragment Arguments: Spec Implementation [RFC1]","href":"/rfcs/1010","docId":"1010","unlisted":false},{"type":"link","label":"865: Fragment Arguments (parameterized fragments) for GraphQL [RFC1]","href":"/rfcs/865","docId":"865","unlisted":false},{"type":"link","label":"895: Client Controlled Nullability [RFC1]","href":"/rfcs/895","docId":"895","unlisted":false},{"type":"link","label":"883: Relax SameResponseShape algorithm to be compatible with covariant fields [RFC1]","href":"/rfcs/883","docId":"883","unlisted":false},{"type":"link","label":"877: Forbid duplicating argument names [RFC1]","href":"/rfcs/877","docId":"877","unlisted":false},{"type":"link","label":"733*: Tagged type [RFC1]","href":"/rfcs/733","docId":"733","unlisted":false},{"type":"link","label":"395: inputUnion type [RFC1]","href":"/rfcs/395","docId":"395","unlisted":false},{"type":"link","label":"1052: deduplicated incremental delivery [RFC0]","href":"/rfcs/1052","docId":"1052","unlisted":false},{"type":"link","label":"1048*: Null-Only-On-Error / Semantically-Non-Null type (asterisk) [RFC0]","href":"/rfcs/1048","docId":"1048","unlisted":false},{"type":"link","label":"1034: incremental delivery with deduplication + concurrent execution [RFC0]","href":"/rfcs/1034","docId":"1034","unlisted":false},{"type":"link","label":"999: introduce ExecuteGroupedFieldSet, CollectRootFields and CollectSubfields [RFC0]","href":"/rfcs/999","docId":"999","unlisted":false},{"type":"link","label":"1026: incremental delivery with deduplication + concurrent execution [RFC0]","href":"/rfcs/1026","docId":"1026","unlisted":false},{"type":"link","label":"1018*: Alternative proposal for `@stream`/`@defer` [RFC0]","href":"/rfcs/1018","docId":"1018","unlisted":false},{"type":"link","label":"1023: incremental delivery without branching [RFC0]","href":"/rfcs/1023","docId":"1023","unlisted":false},{"type":"link","label":"888: Map type [RFC0]","href":"/rfcs/888","docId":"888","unlisted":false},{"type":"link","label":"806*: __typename should be valid at subscription root [RFC0]","href":"/rfcs/806","docId":"806","unlisted":false},{"type":"link","label":"586*: Input Objects accepting exactly @oneField [RFC0]","href":"/rfcs/586","docId":"586","unlisted":false},{"type":"link","label":"471: Limit uniqueness to `@skip`, `@include` and `@deprecated` directives [RFC0]","href":"/rfcs/471","docId":"471","unlisted":false},{"type":"link","label":"326: Scalar serialize as built-in scalar type [RFC0]","href":"/rfcs/326","docId":"326","unlisted":false},{"type":"link","label":"319: Add \'@ignoreIfUnknown\' to allow forward compatibility for clients [RFCX]","href":"/rfcs/319","docId":"319","unlisted":false},{"type":"link","label":"606: Support empty composite types [RFCX]","href":"/rfcs/606","docId":"606","unlisted":false},{"type":"link","label":"460: Require Interfaces to have 1+ Objects implementing [RFCX]","href":"/rfcs/460","docId":"460","unlisted":false},{"type":"link","label":"315: Support DateTime scalar [RFCX]","href":"/rfcs/315","docId":"315","unlisted":false},{"type":"link","label":"232: __id field for unique identifiers [RFCX]","href":"/rfcs/232","docId":"232","unlisted":false},{"type":"link","label":"445: Disallow non-breakable chains of circular references in Input Objects [RFC3]","href":"/rfcs/445","docId":"445","unlisted":false}]}]},"docs":{"232":{"id":"232","title":"__id field for unique identifiers","description":"At a glance","sidebar":"rfcsSidebar"},"315":{"id":"315","title":"Support DateTime scalar","description":"At a glance","sidebar":"rfcsSidebar"},"319":{"id":"319","title":"Add \'@ignoreIfUnknown\' to allow forward compatibility for clients","description":"At a glance","sidebar":"rfcsSidebar"},"325":{"id":"325","title":"Add \\"Any\\" scalar type","description":"At a glance","sidebar":"rfcsSidebar"},"326":{"id":"326","title":"Scalar serialize as built-in scalar type","description":"At a glance","sidebar":"rfcsSidebar"},"373":{"id":"373","title":"Allow interfaces to implement other interfaces","description":"At a glance","sidebar":"rfcsSidebar"},"395":{"id":"395","title":"inputUnion type","description":"At a glance","sidebar":"rfcsSidebar"},"445":{"id":"445","title":"Disallow non-breakable chains of circular references in Input Objects","description":"At a glance","sidebar":"rfcsSidebar"},"454":{"id":"454","title":"Add validation steps for schema extensions","description":"At a glance","sidebar":"rfcsSidebar"},"459":{"id":"459","title":"Remove Interface is implemented by 1+ Objects validation","description":"At a glance","sidebar":"rfcsSidebar"},"460":{"id":"460","title":"Require Interfaces to have 1+ Objects implementing","description":"At a glance","sidebar":"rfcsSidebar"},"462":{"id":"462","title":"Input & Output type definition","description":"At a glance","sidebar":"rfcsSidebar"},"463":{"id":"463","title":"Ensure validation of directive arguments","description":"At a glance","sidebar":"rfcsSidebar"},"466":{"id":"466","title":"Add description to Schema","description":"At a glance","sidebar":"rfcsSidebar"},"470":{"id":"470","title":"\\"Directive order is significant\\" section","description":"At a glance","sidebar":"rfcsSidebar"},"471":{"id":"471","title":"Limit uniqueness to `@skip`, `@include` and `@deprecated` directives","description":"At a glance","sidebar":"rfcsSidebar"},"472":{"id":"472","title":"Repeatable directives","description":"At a glance","sidebar":"rfcsSidebar"},"509":{"id":"509","title":"Allow singular variables in list locations","description":"At a glance","sidebar":"rfcsSidebar"},"510":{"id":"510","title":"Allow directives on variable definitions","description":"At a glance","sidebar":"rfcsSidebar"},"521":{"id":"521","title":"Scalar serialize as built-in scalar type","description":"At a glance","sidebar":"rfcsSidebar"},"525":{"id":"525","title":"Allow deprecation of input values","description":"At a glance","sidebar":"rfcsSidebar"},"556":{"id":"556","title":"Document Directives","description":"At a glance","sidebar":"rfcsSidebar"},"567":{"id":"567","title":"allow directives on directive definitions","description":"At a glance","sidebar":"rfcsSidebar"},"586":{"id":"586","title":"Input Objects accepting exactly @oneField","description":"At a glance","sidebar":"rfcsSidebar"},"598":{"id":"598","title":"Avoid parse ambiguity on types & extensions","description":"At a glance","sidebar":"rfcsSidebar"},"599":{"id":"599","title":"Clarify that lexing is greedy","description":"At a glance","sidebar":"rfcsSidebar"},"601":{"id":"601","title":"Number value literal lookahead restrictions","description":"At a glance","sidebar":"rfcsSidebar"},"606":{"id":"606","title":"Support empty composite types","description":"At a glance","sidebar":"rfcsSidebar"},"631":{"id":"631","title":"Make root query operation type optional","description":"At a glance","sidebar":"rfcsSidebar"},"649":{"id":"649","title":"Custom Scalar Specification URLs","description":"At a glance","sidebar":"rfcsSidebar"},"667":{"id":"667","title":"[RFC Sketch] Defer and Stream Directives","description":"At a glance","sidebar":"rfcsSidebar"},"673":{"id":"673","title":"Servers must preserve lexical ordering between SDL and introspection","description":"At a glance","sidebar":"rfcsSidebar"},"674":{"id":"674","title":"allow empty selections","description":"At a glance","sidebar":"rfcsSidebar"},"701":{"id":"701","title":"Disallow non-breakable chains of circular references in Input Objects","description":"At a glance","sidebar":"rfcsSidebar"},"706":{"id":"706","title":"Add support for directives for an object field name","description":"At a glance","sidebar":"rfcsSidebar"},"710":{"id":"710","title":"Add namedType and punctuatedName to __Type","description":"At a glance","sidebar":"rfcsSidebar"},"733":{"id":"733","title":"Tagged type","description":"At a glance","sidebar":"rfcsSidebar"},"742":{"id":"742","title":"Spec edits for @defer/@stream","description":"At a glance","sidebar":"rfcsSidebar"},"776":{"id":"776","title":"__typename is not valid at subscription root","description":"At a glance","sidebar":"rfcsSidebar"},"793":{"id":"793","title":"Default value coercion rules","description":"At a glance","sidebar":"rfcsSidebar"},"794":{"id":"794","title":"Schema Coordinates","description":"At a glance","sidebar":"rfcsSidebar"},"803":{"id":"803","title":"Replace \'query error\' with \'request error\'","description":"At a glance","sidebar":"rfcsSidebar"},"805":{"id":"805","title":"Allow deprecation of input values (field args, directive args, input fields)","description":"At a glance","sidebar":"rfcsSidebar"},"806":{"id":"806","title":"__typename should be valid at subscription root","description":"At a glance","sidebar":"rfcsSidebar"},"823":{"id":"823","title":"operation expressions","description":"At a glance","sidebar":"rfcsSidebar"},"825":{"id":"825","title":"OneOf Input Objects","description":"At a glance","sidebar":"rfcsSidebar"},"849":{"id":"849","title":"Allow full unicode range","description":"At a glance","sidebar":"rfcsSidebar"},"860":{"id":"860","title":"Prevent @skip and @include on root subscription selection set","description":"At a glance","sidebar":"rfcsSidebar"},"865":{"id":"865","title":"Fragment Arguments (parameterized fragments) for GraphQL","description":"At a glance","sidebar":"rfcsSidebar"},"877":{"id":"877","title":"Forbid duplicating argument names","description":"At a glance","sidebar":"rfcsSidebar"},"879":{"id":"879","title":"__fulfilled meta field","description":"At a glance","sidebar":"rfcsSidebar"},"883":{"id":"883","title":"Relax SameResponseShape algorithm to be compatible with covariant fields","description":"At a glance","sidebar":"rfcsSidebar"},"888":{"id":"888","title":"Map type","description":"At a glance","sidebar":"rfcsSidebar"},"891":{"id":"891","title":"Add explanation about argument name uniqueness.","description":"At a glance","sidebar":"rfcsSidebar"},"892":{"id":"892","title":"Add descriptions to executable definitions","description":"At a glance","sidebar":"rfcsSidebar"},"895":{"id":"895","title":"Client Controlled Nullability","description":"At a glance","sidebar":"rfcsSidebar"},"907":{"id":"907","title":"Add support for directives on directives","description":"At a glance","sidebar":"rfcsSidebar"},"939":{"id":"939","title":"allow unions to declare implementation of interfaces","description":"At a glance","sidebar":"rfcsSidebar"},"948":{"id":"948","title":"OneOf Objects","description":"At a glance","sidebar":"rfcsSidebar"},"950":{"id":"950","title":"allow unions to include interfaces and unions","description":"At a glance","sidebar":"rfcsSidebar"},"955":{"id":"955","title":"Add validation rule that operation types exist","description":"At a glance","sidebar":"rfcsSidebar"},"960":{"id":"960","title":"Allow recursion within ResolveAbstractType","description":"At a glance","sidebar":"rfcsSidebar"},"976":{"id":"976","title":"Add \'extensions\' to request","description":"At a glance","sidebar":"rfcsSidebar"},"987":{"id":"987","title":"Fix ambiguity around when schema definition may be omitted","description":"At a glance","sidebar":"rfcsSidebar"},"997":{"id":"997","title":"Expand @deprecated to Objects","description":"At a glance","sidebar":"rfcsSidebar"},"998":{"id":"998","title":"add spec edits for references","description":"At a glance","sidebar":"rfcsSidebar"},"999":{"id":"999","title":"introduce ExecuteGroupedFieldSet, CollectRootFields and CollectSubfields","description":"At a glance","sidebar":"rfcsSidebar"},"1010":{"id":"1010","title":"Fragment Arguments: Spec Implementation","description":"At a glance","sidebar":"rfcsSidebar"},"1015":{"id":"1015","title":"\\"Root\\" Types clarity \u2192 \\"Operation Type\\"","description":"At a glance","sidebar":"rfcsSidebar"},"1018":{"id":"1018","title":"Alternative proposal for `@stream`/`@defer`","description":"At a glance","sidebar":"rfcsSidebar"},"1023":{"id":"1023","title":"incremental delivery without branching","description":"At a glance","sidebar":"rfcsSidebar"},"1026":{"id":"1026","title":"incremental delivery with deduplication + concurrent execution","description":"At a glance","sidebar":"rfcsSidebar"},"1034":{"id":"1034","title":"incremental delivery with deduplication + concurrent execution","description":"At a glance","sidebar":"rfcsSidebar"},"1045":{"id":"1045","title":"Remove fragmentSpreadName from visitedFragments when visit is complete","description":"At a glance","sidebar":"rfcsSidebar"},"1048":{"id":"1048","title":"Null-Only-On-Error / Semantically-Non-Null type (asterisk)","description":"At a glance","sidebar":"rfcsSidebar"},"1049":{"id":"1049","title":"Introduce SourceSchemaDocument and FullSchemaDocument","description":"At a glance","sidebar":"rfcsSidebar"},"1050":{"id":"1050","title":"Directive proposal for opting out of null bubbling","description":"At a glance","sidebar":"rfcsSidebar"},"1052":{"id":"1052","title":"deduplicated incremental delivery","description":"At a glance","sidebar":"rfcsSidebar"},"1053":{"id":"1053","title":"Implementations may not deprecate a field that the interface hasn\'t deprecated","description":"At a glance","sidebar":"rfcsSidebar"},"1056":{"id":"1056","title":"Fix CoerceArgumentValues() hasValue","description":"At a glance","sidebar":"rfcsSidebar"},"1057":{"id":"1057","title":"Fix coercion table for list","description":"At a glance","sidebar":"rfcsSidebar"},"1058":{"id":"1058","title":"List coercion algorithm","description":"At a glance","sidebar":"rfcsSidebar"},"1059":{"id":"1059","title":"Introduce Strict and Legacy All Variable Usages Are Allowed","description":"At a glance","sidebar":"rfcsSidebar"},"1063":{"id":"1063","title":"Type system ordering of: object interfaces, directive arguments, input object fields, enum values","description":"At a glance","sidebar":"rfcsSidebar"},"1065":{"id":"1065","title":"SemanticNonNull type (null only on error)","description":"At a glance","sidebar":"rfcsSidebar"},"1073":{"id":"1073","title":"Be strict about error paths format","description":"At a glance","sidebar":"rfcsSidebar"},"1081":{"id":"1081","title":"Fragment arguments/variables (syntax/validation/execution)","description":"At a glance","sidebar":"rfcsSidebar"},"1091":{"id":"1091","title":"Define Data Collections used in the spec","description":"At a glance","sidebar":"rfcsSidebar"},"1092":{"id":"1092","title":"Recommend that order of unordered collections is maintained where possible","description":"At a glance","sidebar":"rfcsSidebar"},"1098":{"id":"1098","title":"Add 5.2.4 Operation Type Exists","description":"At a glance","sidebar":"rfcsSidebar"},"1102":{"id":"1102","title":"Define Data Collections used in the spec","description":"At a glance","sidebar":"rfcsSidebar"},"activity":{"id":"activity","title":"GraphQL RFC Tracker: Activity","description":"Activity log of all tracked GraphQL RFCs","sidebar":"rfcsSidebar"},"AnnotationStructs":{"id":"AnnotationStructs","title":"Annotation Structs","description":"At a glance","sidebar":"rfcsSidebar"},"ClientControlledNullability":{"id":"ClientControlledNullability","title":"Client Controlled Nullability","description":"At a glance","sidebar":"rfcsSidebar"},"CompositeSchemas":{"id":"CompositeSchemas","title":"GraphQL Composite Schemas","description":"At a glance","sidebar":"rfcsSidebar"},"DeferStream":{"id":"DeferStream","title":"GraphQL Defer and Stream Directives","description":"At a glance","sidebar":"rfcsSidebar"},"ExpandingSubtyping":{"id":"ExpandingSubtyping","title":"Expanding Subtyping (for output types)","description":"At a glance","sidebar":"rfcsSidebar"},"FeatureDiscovery":{"id":"FeatureDiscovery","title":"Feature Discovery","description":"At a glance","sidebar":"rfcsSidebar"},"FragmentArguments":{"id":"FragmentArguments","title":"Fragment Arguments","description":"At a glance","sidebar":"rfcsSidebar"},"FragmentModularity":{"id":"FragmentModularity","title":"Fragment Modularity","description":"At a glance","sidebar":"rfcsSidebar"},"FullSchemas":{"id":"FullSchemas","title":"Full Schemas","description":"At a glance","sidebar":"rfcsSidebar"},"ImplicitInheritance":{"id":"ImplicitInheritance","title":"Implicit Inheritance","description":"At a glance","sidebar":"rfcsSidebar"},"index":{"id":"index","title":"GraphQL RFC Tracker","description":"Tracks the various GraphQL RFCs, their major events and status.","sidebar":"rfcsSidebar"},"InputUnion":{"id":"InputUnion","title":"GraphQL Input Union","description":"At a glance","sidebar":"rfcsSidebar"},"MetadataStructs":{"id":"MetadataStructs","title":"Metadata Structs","description":"At a glance","sidebar":"rfcsSidebar"},"OperationExpressions":{"id":"OperationExpressions","title":"Operation Expressions","description":"At a glance","sidebar":"rfcsSidebar"},"OptInFeatures":{"id":"OptInFeatures","title":"Opt-in features","description":"At a glance","sidebar":"rfcsSidebar"},"SchemaCoordinates":{"id":"SchemaCoordinates","title":"Schema Coordinates","description":"At a glance","sidebar":"rfcsSidebar"},"SchemaFragments":{"id":"SchemaFragments","title":"Schema Fragments","description":"At a glance","sidebar":"rfcsSidebar"},"Struct":{"id":"Struct","title":"Polymorphic-capable composite symmetric input/output type (`struct`)","description":"At a glance","sidebar":"rfcsSidebar"},"Subscriptions":{"id":"Subscriptions","title":"NOTE: this document is kept for historic purposes; GraphQL Subscriptions have been specified and released as part of the official [June 2018 GraphQL Specification](https://spec.graphql.org/June2018/).","description":"At a glance","sidebar":"rfcsSidebar"},"wg1071":{"id":"wg1071","title":"Struct type","description":"At a glance","sidebar":"rfcsSidebar"},"wg1096":{"id":"wg1096","title":"\\"Metadata Directives\\" Proposal","description":"At a glance","sidebar":"rfcsSidebar"},"wg1239":{"id":"wg1239","title":"Fragment Arguments: RFC + Implementation Details","description":"At a glance","sidebar":"rfcsSidebar"},"wg1394":{"id":"wg1394","title":"True Nullability Schema","description":"At a glance","sidebar":"rfcsSidebar"},"wg1410":{"id":"wg1410","title":"Strict Semantic Nullability","description":"At a glance","sidebar":"rfcsSidebar"},"wg815":{"id":"wg815","title":"Nested GraphQL Mutations","description":"At a glance","sidebar":"rfcsSidebar"},"wg857":{"id":"wg857","title":"Fragment Modularity","description":"At a glance","sidebar":"rfcsSidebar"},"wg944":{"id":"wg944","title":"New Intersection Type","description":"At a glance","sidebar":"rfcsSidebar"}}}')}}]);