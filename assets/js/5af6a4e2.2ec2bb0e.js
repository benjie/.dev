"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[1346],{3026:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(5893),i=n(1151);const a={identifier:"1166",closedAt:null,mergedAt:null,title:"Enable 'schema' keyword to be provided without root operations",stage:"0",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1166",events:[{type:"prCreated",date:new Date("2025-05-01T09:55:04.000Z"),href:"https://github.com/graphql/graphql-spec/pull/1166",actor:"benjie"},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/05-May/01-wg-primary.md",date:new Date("2025-05-01T00:00:00.000Z"),actor:null},{type:"commitsPushed",date:new Date("2025-04-30T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/470358cb7cf3b5dc79643a4b5c7d141a30f0fdb5",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/470358cb7cf3b5dc79643a4b5c7d141a30f0fdb5",headline:"Enable 'schema' keyword to be provided without root operations",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"Enable 'schema' keyword to be provided without root operations",image:"/img/rfc_tracker.png"},o=void 0,s={id:"1166",title:"Enable 'schema' keyword to be provided without root operations",description:"At a glance",source:"@site/rfcs/1166.md",sourceDirName:".",slug:"/1166",permalink:"/rfcs/1166",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"1166",closedAt:null,mergedAt:null,title:"Enable 'schema' keyword to be provided without root operations",stage:"0",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1166",events:[{type:"prCreated",date:"2025-05-01T09:55:04.000Z",href:"https://github.com/graphql/graphql-spec/pull/1166",actor:"benjie"},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/05-May/01-wg-primary.md",date:"2025-05-01T00:00:00.000Z",actor:null},{type:"commitsPushed",date:"2025-04-30T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/470358cb7cf3b5dc79643a4b5c7d141a30f0fdb5",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/470358cb7cf3b5dc79643a4b5c7d141a30f0fdb5",headline:"Enable 'schema' keyword to be provided without root operations",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"Enable 'schema' keyword to be provided without root operations",image:"/img/rfc_tracker.png"},sidebar:"rfcsSidebar",previous:{title:"Semantic Nullability",permalink:"/rfcs/SemanticNullability"},next:{title:"Add Transitional Non-Null appendix (`@noPropagate` directive)",permalink:"/rfcs/1165"}},l={},c=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Identifier"}),": #1166"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Stage"}),": ",(0,r.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-0-strawman",children:"RFC0: Strawman"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Champion"}),": ",(0,r.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"PR"}),": ",(0,r.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1166",children:"Enable 'schema' keyword to be provided without root operations"})]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"timeline",children:"Timeline"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/1166",children:"Spec PR"})," created"]})," on 2025-05-01 by benjie"]}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsxs)(t.strong,{children:["Added to ",(0,r.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/05-May/01-wg-primary.md",children:"2025-05-01 WG agenda"})]})}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,r.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/470358cb7cf3b5dc79643a4b5c7d141a30f0fdb5",children:"Enable 'schema' keyword to be provided without root operations"})," on 2025-04-30 by ",(0,r.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"This PR is motivated by:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"#1163"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"In the above PR we want to be able to indicate the error propagation behavior of a schema. However, I find it displeasing that to do so we would need to also explicitly detail the operations supported by the schema when they would normally be auto-detected based on their names:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-diff",children:"+schema @behavior(onError: NO_PROPAGATE) {\n+  query: Query\n+  mutation: Mutation\n+  subscription: Subscription\n+}\n+\n type Query {\n   q: Int\n }\n\n type Mutation {\n   m: Int\n }\n\n type Subscription {\n   s: Int\n }\n"})}),"\n",(0,r.jsx)(t.p,{children:"This PR makes it so that you can use a schema keyword to add directives and/or description to the schema without needing to also specify the root operation types if they can be inferred by the default naming. The above diff would thus become:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-diff",children:"+schema @behavior(onError: NO_PROPAGATE)\n+\n type Query {\n   q: Int\n }\n\n type Mutation {\n   m: Int\n }\n\n type Subscription {\n   s: Int\n }\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Much nicer! ","\u2728"]}),"\n",(0,r.jsxs)(t.p,{children:["This is also useful without the ",(0,r.jsx)(t.code,{children:"onError"})," feature, since it allows you to apply a description to a schema without having to detail the operations:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-diff",children:'+"""Just an example"""\n+schema\n+\n type Query {\n   q: Int\n }\n\n type Mutation {\n   m: Int\n }\n\n type Subscription {\n   s: Int\n }\n'})}),"\n",(0,r.jsx)(t.p,{children:"PR #1164 applies these changes onto #1163; but this PR is mergeable into the spec as-is."}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>o});var r=n(7294);const i={},a=r.createContext(i);function o(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);