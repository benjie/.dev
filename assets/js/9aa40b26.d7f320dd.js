"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[5483],{1932:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>h,metadata:()=>l,toc:()=>s});var n=a(5893),r=a(1151);const h={identifier:"793",title:"Default value coercion rules",stage:"2",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/793",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/06-Jun/05-wg-primary.md",date:new Date("2025-06-05T00:00:00.000Z"),actor:null},{type:"commitsPushed",date:new Date("2025-05-22T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/4f76d6f7a39c55119259bb36a990d6433453cf93",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/4f76d6f7a39c55119259bb36a990d6433453cf93",headline:"Fix accidental mutation",ghUser:"benjie",authorName:"Benjie"},{href:"https://github.com/graphql/graphql-spec/commit/4bac8df736c527ce3ecc2828ebfca951b4ad1048",headline:"Merge branch 'main' into input-object-default-value",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/05-May/01-wg-primary.md",date:new Date("2025-05-01T00:00:00.000Z"),actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/04-Apr/03-wg-primary.md",date:new Date("2025-04-03T00:00:00.000Z"),actor:null},{type:"commitsPushed",date:new Date("2025-03-07T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/9a64519e4b7831971d2e7a909b2eb170be8fc895",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/9a64519e4b7831971d2e7a909b2eb170be8fc895",headline:"Merge branch 'main' into input-object-default-value",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/8beb848ba82fdde4599eccf5d3906ad3dada5365",headline:"Rather than assertions, use return values.",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/12-Dec/07-wg-primary.md",date:new Date("2023-12-07T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-12.md",date:"2023-12",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/06-Jun/01-wg-primary.md",date:new Date("2023-06-01T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-06.md",date:"2023-06",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/03-Mar/02-wg-primary.md",date:new Date("2023-03-02T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-03.md",date:"2023-03",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/02-Feb/02-wg-primary.md",date:new Date("2023-02-02T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-02.md",date:"2023-02",actor:null},{type:"commitsPushed",date:new Date("2023-01-31T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/bb6ab78d75ca5279e7065a47e40150b5c1219764",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/bb6ab78d75ca5279e7065a47e40150b5c1219764",headline:"Merge branch 'main' into input-object-default-value",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:new Date("2022-01-06T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/475d697737ebe967976d561f9092a802b8431a58",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/475d697737ebe967976d561f9092a802b8431a58",headline:"Rewrite default value cycle algorithm in the style of DetectFragmentC\u2026",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/dde1f7bdf8efc28e7ebde06574fe9c57430ad910",headline:"Rewrite input object cycle algorithm to match GraphQL.js implementation",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/12e26d894bfb6f97ac79a6b4ec10564fc6b7fe8a",headline:"Asterisks",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/2838c4f739e93bab997ca021364a50cdb76f967b",headline:"Remove unnecessary step",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/9b7bfd525e9718587f58fdfde39e2fcb73386d2b",headline:"Add non-normative note about memoizing default value coercion",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2022/2022-01-06.md",date:new Date("2022-01-06T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2022/2022-01-06.md",date:new Date("2022-01-06T00:00:00.000Z"),actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-05-13.md",date:new Date("2021-05-13T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-05-13.md",date:new Date("2021-05-13T00:00:00.000Z"),actor:null},{type:"commitsPushed",date:new Date("2021-05-03T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/084b2d55e961d3259cbd191bfb7a8e9ad1c22b05",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/084b2d55e961d3259cbd191bfb7a8e9ad1c22b05",headline:"Clarify the default value cycle detection logic",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-03-04.md",date:new Date("2021-03-04T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-03-04.md",date:new Date("2021-03-04T00:00:00.000Z"),actor:null},{type:"commitsPushed",date:new Date("2021-02-26T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/f73af73cfd778d43e338a3e11cd93b9641f4a266",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/f73af73cfd778d43e338a3e11cd93b9641f4a266",headline:"Reorder assertions to prevent infinite loop during coercion",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/5e793fb5df4e52d096dc6590129604f31fe8d05e",headline:"Reduce diff",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:new Date("2021-02-19T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/25da05630af7dbd66a525448ecf8f6d921512851",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/25da05630af7dbd66a525448ecf8f6d921512851",headline:"Fix 'must not cause an infinite loop' wording.",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-01-07.md",date:new Date("2021-01-07T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-01-07.md",date:new Date("2021-01-07T00:00:00.000Z"),actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2020/2020-12-03.md",date:new Date("2020-12-03T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2020/2020-12-03.md",date:new Date("2020-12-03T00:00:00.000Z"),actor:null},{type:"prCreated",date:new Date("2020-11-13T12:23:11.000Z"),href:"https://github.com/graphql/graphql-spec/pull/793",actor:"benjie"},{type:"commitsPushed",date:new Date("2020-11-13T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/8939e209624e81523702c59af1842efa42d1f9d6",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/8939e209624e81523702c59af1842efa42d1f9d6",headline:"Default value coercion rules",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"Default value coercion rules",image:"/img/rfc_tracker.png"},i=void 0,l={id:"793",title:"Default value coercion rules",description:"At a glance",source:"@site/rfcs/793.md",sourceDirName:".",slug:"/793",permalink:"/rfcs/793",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"793",title:"Default value coercion rules",stage:"2",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/793",events:[{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/06-Jun/05-wg-primary.md",date:"2025-06-05T00:00:00.000Z",actor:null},{type:"commitsPushed",date:"2025-05-22T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/4f76d6f7a39c55119259bb36a990d6433453cf93",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/4f76d6f7a39c55119259bb36a990d6433453cf93",headline:"Fix accidental mutation",ghUser:"benjie",authorName:"Benjie"},{href:"https://github.com/graphql/graphql-spec/commit/4bac8df736c527ce3ecc2828ebfca951b4ad1048",headline:"Merge branch 'main' into input-object-default-value",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/05-May/01-wg-primary.md",date:"2025-05-01T00:00:00.000Z",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/04-Apr/03-wg-primary.md",date:"2025-04-03T00:00:00.000Z",actor:null},{type:"commitsPushed",date:"2025-03-07T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/9a64519e4b7831971d2e7a909b2eb170be8fc895",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/9a64519e4b7831971d2e7a909b2eb170be8fc895",headline:"Merge branch 'main' into input-object-default-value",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/8beb848ba82fdde4599eccf5d3906ad3dada5365",headline:"Rather than assertions, use return values.",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/12-Dec/07-wg-primary.md",date:"2023-12-07T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-12.md",date:"2023-12",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/06-Jun/01-wg-primary.md",date:"2023-06-01T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-06.md",date:"2023-06",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/03-Mar/02-wg-primary.md",date:"2023-03-02T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-03.md",date:"2023-03",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/02-Feb/02-wg-primary.md",date:"2023-02-02T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-02.md",date:"2023-02",actor:null},{type:"commitsPushed",date:"2023-01-31T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/bb6ab78d75ca5279e7065a47e40150b5c1219764",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/bb6ab78d75ca5279e7065a47e40150b5c1219764",headline:"Merge branch 'main' into input-object-default-value",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:"2022-01-06T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/475d697737ebe967976d561f9092a802b8431a58",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/475d697737ebe967976d561f9092a802b8431a58",headline:"Rewrite default value cycle algorithm in the style of DetectFragmentC\u2026",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/dde1f7bdf8efc28e7ebde06574fe9c57430ad910",headline:"Rewrite input object cycle algorithm to match GraphQL.js implementation",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/12e26d894bfb6f97ac79a6b4ec10564fc6b7fe8a",headline:"Asterisks",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/2838c4f739e93bab997ca021364a50cdb76f967b",headline:"Remove unnecessary step",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/9b7bfd525e9718587f58fdfde39e2fcb73386d2b",headline:"Add non-normative note about memoizing default value coercion",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2022/2022-01-06.md",date:"2022-01-06T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2022/2022-01-06.md",date:"2022-01-06T00:00:00.000Z",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-05-13.md",date:"2021-05-13T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-05-13.md",date:"2021-05-13T00:00:00.000Z",actor:null},{type:"commitsPushed",date:"2021-05-03T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/084b2d55e961d3259cbd191bfb7a8e9ad1c22b05",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/084b2d55e961d3259cbd191bfb7a8e9ad1c22b05",headline:"Clarify the default value cycle detection logic",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-03-04.md",date:"2021-03-04T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-03-04.md",date:"2021-03-04T00:00:00.000Z",actor:null},{type:"commitsPushed",date:"2021-02-26T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/f73af73cfd778d43e338a3e11cd93b9641f4a266",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/f73af73cfd778d43e338a3e11cd93b9641f4a266",headline:"Reorder assertions to prevent infinite loop during coercion",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/5e793fb5df4e52d096dc6590129604f31fe8d05e",headline:"Reduce diff",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:"2021-02-19T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/25da05630af7dbd66a525448ecf8f6d921512851",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/25da05630af7dbd66a525448ecf8f6d921512851",headline:"Fix 'must not cause an infinite loop' wording.",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-01-07.md",date:"2021-01-07T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-01-07.md",date:"2021-01-07T00:00:00.000Z",actor:null},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2020/2020-12-03.md",date:"2020-12-03T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2020/2020-12-03.md",date:"2020-12-03T00:00:00.000Z",actor:null},{type:"prCreated",date:"2020-11-13T12:23:11.000Z",href:"https://github.com/graphql/graphql-spec/pull/793",actor:"benjie"},{type:"commitsPushed",date:"2020-11-13T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/8939e209624e81523702c59af1842efa42d1f9d6",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/8939e209624e81523702c59af1842efa42d1f9d6",headline:"Default value coercion rules",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"Default value coercion rules",image:"/img/rfc_tracker.png"},sidebar:"rfcsSidebar",previous:{title:"Add validation steps for schema extensions",permalink:"/rfcs/454"},next:{title:"Schema Coordinates",permalink:"/rfcs/794"}},c={},s=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function o(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{Details:a}=t;return a||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Identifier"}),": #793"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Stage"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-2-draft",children:"RFC2: Draft"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Champion"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"PR"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/793",children:"Default value coercion rules"})]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"timeline",children:"Timeline"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/06-Jun/05-wg-primary.md",children:"2025-06-05 WG agenda"})]})}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"2 commits pushed"})," on 2025-05-22:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/4f76d6f7a39c55119259bb36a990d6433453cf93",children:"Fix accidental mutation"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/4bac8df736c527ce3ecc2828ebfca951b4ad1048",children:"Merge branch 'main' into input-object-default-value"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/05-May/01-wg-primary.md",children:"2025-05-01 WG agenda"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2025/04-Apr/03-wg-primary.md",children:"2025-04-03 WG agenda"})]})}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"2 commits pushed"})," on 2025-03-07:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/9a64519e4b7831971d2e7a909b2eb170be8fc895",children:"Merge branch 'main' into input-object-default-value"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/8beb848ba82fdde4599eccf5d3906ad3dada5365",children:"Rather than assertions, use return values."})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/12-Dec/07-wg-primary.md",children:"2023-12-07 WG agenda"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Mentioned in ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-12.md",children:"2023-12 WG notes"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/06-Jun/01-wg-primary.md",children:"2023-06-01 WG agenda"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Mentioned in ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-06.md",children:"2023-06 WG notes"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/03-Mar/02-wg-primary.md",children:"2023-03-02 WG agenda"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Mentioned in ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-03.md",children:"2023-03 WG notes"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2023/02-Feb/02-wg-primary.md",children:"2023-02-02 WG agenda"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Mentioned in ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2023/2023-02.md",children:"2023-02 WG notes"})]})}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/bb6ab78d75ca5279e7065a47e40150b5c1219764",children:"Merge branch 'main' into input-object-default-value"})," on 2023-01-31 by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"5 commits pushed"})," on 2022-01-06:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/475d697737ebe967976d561f9092a802b8431a58",children:"Rewrite default value cycle algorithm in the style of DetectFragmentC\u2026"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/dde1f7bdf8efc28e7ebde06574fe9c57430ad910",children:"Rewrite input object cycle algorithm to match GraphQL.js implementation"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/12e26d894bfb6f97ac79a6b4ec10564fc6b7fe8a",children:"Asterisks"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/2838c4f739e93bab997ca021364a50cdb76f967b",children:"Remove unnecessary step"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/9b7bfd525e9718587f58fdfde39e2fcb73386d2b",children:"Add non-normative note about memoizing default value coercion"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2022/2022-01-06.md",children:"2022-01-06 WG agenda"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Mentioned in ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2022/2022-01-06.md",children:"2022-01-06 WG notes"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-05-13.md",children:"2021-05-13 WG agenda"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Mentioned in ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-05-13.md",children:"2021-05-13 WG notes"})]})}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/084b2d55e961d3259cbd191bfb7a8e9ad1c22b05",children:"Clarify the default value cycle detection logic"})," on 2021-05-03 by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-03-04.md",children:"2021-03-04 WG agenda"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Mentioned in ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-03-04.md",children:"2021-03-04 WG notes"})]})}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"2 commits pushed"})," on 2021-02-26:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/f73af73cfd778d43e338a3e11cd93b9641f4a266",children:"Reorder assertions to prevent infinite loop during coercion"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/5e793fb5df4e52d096dc6590129604f31fe8d05e",children:"Reduce diff"})," by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/25da05630af7dbd66a525448ecf8f6d921512851",children:"Fix 'must not cause an infinite loop' wording."})," on 2021-02-19 by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2021/2021-01-07.md",children:"2021-01-07 WG agenda"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Mentioned in ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2021/2021-01-07.md",children:"2021-01-07 WG notes"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Added to ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2020/2020-12-03.md",children:"2020-12-03 WG agenda"})]})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.strong,{children:["Mentioned in ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2020/2020-12-03.md",children:"2020-12-03 WG notes"})]})}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/793",children:"Spec PR"})," created"]})," on 2020-11-13 by benjie"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/8939e209624e81523702c59af1842efa42d1f9d6",children:"Default value coercion rules"})," on 2020-11-13 by ",(0,n.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"http://spec.graphql.org/draft/#sec-Coercing-Field-Arguments",children:"Coercing Field Arguments"})," states:"]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:"5.c. Let defaultValue be the default value for argumentDefinition.\n[...]\n5.h. If hasValue is not true and defaultValue exists (including null):\n5.h.i. Add an entry to coercedValues named argumentName with the value defaultValue.\n[...]\n5.j.iii.1. If value cannot be coerced according to the input coercion rules of argumentType, throw a field error.\n5.j.iii.2. Let coercedValue be the result of coercing value according to the input coercion rules of argumentType.\n5.j.iii.3. Add an entry to coercedValues named argumentName with the value coercedValue."}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Here we note that there is no run-time coercion of ",(0,n.jsx)(t.code,{children:"defaultValue"}),", which makes sense (why do at runtime that which can be done at build time?). However, there doesn't seem to be a rule that specifies that ",(0,n.jsx)(t.code,{children:"defaultValue"})," must be coerced at all, which leads to consequences:"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"you could use any value for defaultValue and it could break the type safety guarantees of GraphQL"}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-js/issues/385",children:"nested defaultValues are not applied"})}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"When building the following GraphQL schema programmatically (code below) with GraphQL.js:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",children:"type Query {\n  example(inputObject: ExampleInputObject! = {}): Int\n}\n\ninput ExampleInputObject {\n  number: Int! = 3\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["And a resolver for ",(0,n.jsx)(t.code,{children:"Query.example"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"resolve(source, args) {\n  return args.inputObject.number;\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"You might expect the following queries to all gave the same result:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",children:"query A {\n  example\n}\nquery B {\n  example(inputObject: {})\n}\nquery C {\n  example(inputObject: { number: 3 })\n}\nquery D($inputObject: ExampleInputObject! = {}) {\n  example(inputObject: $inputObject)\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"However, it turns out that query A's result differs:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{"example":null}\n{"example":3}\n{"example":3}\n{"example":3}\n'})}),"\n",(0,n.jsxs)(t.p,{children:["This is because ",(0,n.jsx)(t.code,{children:"defaultValue"})," for ",(0,n.jsx)(t.code,{children:"Query.example(inputObject:)"})," was not coerced, so none of the defaultValues of ",(0,n.jsx)(t.code,{children:"ExampleInputObject"})," were applied."]}),"\n",(0,n.jsxs)(t.p,{children:["This is extremely unexpected, because looking at the GraphQL schema definition it looks like there's no circumstance under which ",(0,n.jsx)(t.code,{children:"ExampleInputObject"})," may not have ",(0,n.jsx)(t.code,{children:"number"})," as an integer; however when the ",(0,n.jsx)(t.code,{children:"defaultValue"})," of ",(0,n.jsx)(t.code,{children:"Query.example(inputObject:)"})," is used, the value of ",(0,n.jsx)(t.code,{children:"number"})," is ",(0,n.jsx)(t.code,{children:"undefined"}),"."]}),"\n",(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"Example runnable with GraphQL.js"}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:'const {\n  graphqlSync,\n  printSchema,\n  GraphQLSchema,\n  GraphQLObjectType,\n  GraphQLInputObjectType,\n  GraphQLInt,\n  GraphQLNonNull,\n} = require("graphql");\n\nconst ExampleInputObject = new GraphQLInputObjectType({\n  name: "ExampleInputObject",\n  fields: {\n    number: {\n      type: new GraphQLNonNull(GraphQLInt),\n      defaultValue: 3,\n    },\n  },\n});\n\nconst Query = new GraphQLObjectType({\n  name: "Query",\n  fields: {\n    example: {\n      args: {\n        inputObject: {\n          type: new GraphQLNonNull(ExampleInputObject),\n          defaultValue: {},\n        },\n      },\n      type: GraphQLInt,\n      resolve(source, args) {\n        return args.inputObject.number;\n      },\n    },\n  },\n});\n\nconst schema = new GraphQLSchema({\n  query: Query,\n});\n\nconsole.log(printSchema(schema));\n\n// All four of these should be equivalent?\nconst source = /* GraphQL */ `\n  query A {\n    example\n  }\n  query B {\n    example(inputObject: {})\n  }\n  query C {\n    example(inputObject: { number: 3 })\n  }\n  query D($inputObject: ExampleInputObject! = {}) {\n    example(inputObject: $inputObject)\n  }\n`;\nconst result1 = graphqlSync({ schema, source, operationName: "A" });\nconst result2 = graphqlSync({ schema, source, operationName: "B" });\nconst result3 = graphqlSync({ schema, source, operationName: "C" });\nconst result4 = graphqlSync({ schema, source, operationName: "D" });\n\nconsole.log(JSON.stringify(result1.data));\nconsole.log(JSON.stringify(result2.data));\nconsole.log(JSON.stringify(result3.data));\nconsole.log(JSON.stringify(result4.data));\n'})})]}),"\n",(0,n.jsxs)(t.p,{children:["This was ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-js/issues/385",children:"raised against GraphQL.js back in 2016"}),", but @IvanGoncharov closed it early last year stating that GraphQL.js conforms to the GraphQL Spec in this regard."]}),"\n",(0,n.jsxs)(t.p,{children:["My proposal is that when a ",(0,n.jsx)(t.code,{children:"defaultValue"})," is specified, the GraphQL implementation should coerce it to conform to the relevant type just like it does for runtime values as specified in ",(0,n.jsx)(t.a,{href:"https://spec.graphql.org/draft/#sec-Coercing-Variable-Values",children:"Coercing Variable Values"})," and ",(0,n.jsx)(t.a,{href:"https://spec.graphql.org/draft/#sec-Coercing-Field-Arguments",children:"Coercing Field Arguments"}),"."]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.p,{children:"This is validated for query documents (and schema defined as SDL), because:"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["Literal values must be compatible with the type expected in the position they are found as per the coercion rules defined in the Type System chapter.\n-- ",(0,n.jsx)(t.a,{href:"http://spec.graphql.org/draft/#sel-FALXDFDDAACFAhuF",children:"http://spec.graphql.org/draft/#sel-FALXDFDDAACFAhuF"})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"But there doesn't seem to be any such assertion for GraphQL schemas defined in code."}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsxs)(t.p,{children:["GraphQL.js implementation: ",(0,n.jsx)(t.a,{href:"https://github.com/graphql/graphql-js/pull/3814",children:"https://github.com/graphql/graphql-js/pull/3814"})]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>l,a:()=>i});var n=a(7294);const r={},h=n.createContext(r);function i(e){const t=n.useContext(h);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(h.Provider,{value:t},e.children)}}}]);