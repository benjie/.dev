"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[9196],{1150:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>o,frontMatter:()=>n,metadata:()=>r,toc:()=>s});var i=a(5893),h=a(1151);const n={identifier:"733",title:"Tagged type",stage:"X",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/733",events:[{type:"commitsPushed",date:new Date("2021-01-21T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/ced63be93178f0c76baf93b5dbc05789f170d8f1",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/ced63be93178f0c76baf93b5dbc05789f170d8f1",headline:"Separate input and output tagged types",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2020/2020-10-01.md",date:new Date("2020-10-01T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2020/2020-10-01.md",date:new Date("2020-10-01T00:00:00.000Z"),actor:null},{type:"commitsPushed",date:new Date("2020-09-02T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/88e506ac92e35861c1218408ab7fda79b19054f1",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/88e506ac92e35861c1218408ab7fda79b19054f1",headline:"GetTaggedMember[Field]Name",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/fee5ca3a1112d49105d717e4ec4e1e36e36986a9",headline:"__[Tagged]Member[Field]",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/0f5d7cc0bd1d31adbf6e94c38b400af95cf806ba",headline:"TAGGED_MEMBER_[FIELD_]DEFINITION",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/94a67b73a26136011cca25f8918996603c7f5a1e",headline:"TaggedMember[Field]Definition/TaggedMember[Field]sDefinition",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/f66e237789e560998086b95b16febbcc09b39cec",headline:"taggedMember[Field]Name",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/e3082583524e64951d48b751809e56172e267e87",headline:"Fix definition ordering",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/6fa34c2ba628bee89306eaf4ed1a82b08d2344c3",headline:"Members -> member fields",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/4bf67b417db45f9cf805f3003c5c8509294e3667",headline:"Grammar",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/5afea0bd83145b4de07e9b10c040bcd4032d6cc9",headline:"Fix incorrect capital",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:new Date("2020-09-01T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/c31ddc404ba6f07f6676988afcdc0641715c007b",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/c31ddc404ba6f07f6676988afcdc0641715c007b",headline:"Merge branch 'master' into tagged-type",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/55feb1cab004c9c38da0aeaae4f4b4349d111b5b",headline:"Move TaggedMemberDefinition",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/f786f1c52b2327b3c4d67eee9d9e5b111110383b",headline:"Add TAGGED_MEMBER_DEFINITION directive location",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/5906cd06540c74071aa8036145c5efd34821d48f",headline:"Reorder so tagged types comes after interfaces/unions",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/bd88e51653d97769aea8ef49583b3b739029b09c",headline:"Edit out comma that snuck in",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/514bb7271a56fe4d1e5ad683fde82ecfb2c54c61",headline:"Add word 'concrete'",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/4768d8dbe7d08913a29fefdf93a31a84e80e94de",headline:"Define member field",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/95ccf953196c5ac4c3600452b3d0b1d0527c201a",headline:"Add Lee's note",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/88f983b3855bd0099769b036ed5fe2fbfdf78054",headline:"Lee's rewording",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/a6486ce68b5f81c34cd48940c7766c6afdfc31a0",headline:"Add mutually exclusive tagged type example with distinct types",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/cf8d7a6711bfdca134227e1efec91017ca2d4357",headline:"Make it clear Tagged type fields can be of any type.",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/a09b30a98c990bfcb3bb43449fbf73fee3920ee9",headline:"s/objects/results",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/c81ebb1f600c4000356e3dace0f2996d43a256e0",headline:":",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/5dcb81bcda794e3e8d2ea3b5e7623147e98cf423",headline:"Checking for one key is easier than validating the given keys (maybe)",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/71ca89219cd3a26a552514f4dcbe8ef07b29ad49",headline:"nit",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/ce213bbd18eb0e5dcc2df21f9bd3666a1e351440",headline:"Allow @deprecated on TAGGED_MEMBER_DEFINITION",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/7ac75324f0d33e71b7e1c9d5a8d2e23158a366a1",headline:"Reword note on tagged member deprecation",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/0ae9ba8d1e1373e6805831cb12ff68b44b25d90a",headline:"Add note that added members must not make the tagged type invalid",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/361a235dfe5c85df07e1a4d4fd953f1230d087be",headline:"Fix case",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/a1705b5b1e6c158513d3de841585974d73e920c1",headline:"Remove duplicate",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/8807c1c3b6ec21f0eee7d59213a43e068d159105",headline:"Reword to follow Lee's example",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/61b7b8f506d05a4db05dafa9130d4a32c2183aaa",headline:"Reposition TAGGED to always be between Union and Enum.",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/285673a5ab4fbf20ed87b6af929d95b6a4113f0c",headline:"Terran -> Earthling",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/d9820c43b62067b9eef36efc79ebfcd44778365b",headline:"Make header consistent",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/f91d8ba6302ffb4cf107cc2c94c73695f1011b60",headline:"__Type represents all named types in the system",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/82151ba768e97b628570fe27b5b5bb180b373c99",headline:"Apply Lee's suggestion",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/02a2a93b1f640792cbfff7c45e287e34fa9f3f6b",headline:"Combine",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/5bdcc300ac87d1dead525bb11819a9fa8e536b05",headline:"Use 'field' rather than 'key'",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2020/2020-08-06.md",date:new Date("2020-08-06T00:00:00.000Z"),actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2020/2020-08-06.md",date:new Date("2020-08-06T00:00:00.000Z"),actor:null},{type:"commitsPushed",date:new Date("2020-07-21T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/a4c457899f3b8ae7a86a0d447f50d9eb07fc7d6b",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/a4c457899f3b8ae7a86a0d447f50d9eb07fc7d6b",headline:"Factor in review feedback from @spawnia",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:new Date("2020-07-15T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/ceb81d586db61164b4e71bfb7532411d48463283",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/ceb81d586db61164b4e71bfb7532411d48463283",headline:"Merge branch 'master' into tagged-type",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/e65126dab0792f0593f379d852598407fb2f9f25",headline:"Sync type system",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:new Date("2020-07-03T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/a73d1cc37a55f7cee6c762c99e2c9df201e4e6f0",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/a73d1cc37a55f7cee6c762c99e2c9df201e4e6f0",headline:'Change tagged "fields" to "members"',ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"prCreated",date:new Date("2020-06-12T16:54:57.000Z"),href:"https://github.com/graphql/graphql-spec/pull/733",actor:"benjie"},{type:"commitsPushed",date:new Date("2020-06-12T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/3d43179e070d56e534da0f019ef42ef6202805e9",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/3d43179e070d56e534da0f019ef42ef6202805e9",headline:"First pass",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/d411b60e2df85f6599a8ded63028ba3938cc1db7",headline:"More edits",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/16de65758742a7e4cdd9d5b0c7af1743cc6dcc68",headline:"Input coercion",ghUser:"benjie",authorName:"Benjie Gillam"}]}],related:"586, 825, InputUnion, SchemaCoordinates, wg1071",shortname:"Tagged type",image:"/img/rfc_tracker.png",closedAt:new Date("2024-07-01T16:26:54.000Z"),nextStage:!1},c=void 0,r={id:"733",title:"Tagged type",description:"At a glance",source:"@site/rfcs/733.md",sourceDirName:".",slug:"/733",permalink:"/rfcs/733",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"733",title:"Tagged type",stage:"X",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/733",events:[{type:"commitsPushed",date:"2021-01-21T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/ced63be93178f0c76baf93b5dbc05789f170d8f1",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/ced63be93178f0c76baf93b5dbc05789f170d8f1",headline:"Separate input and output tagged types",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2020/2020-10-01.md",date:"2020-10-01T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2020/2020-10-01.md",date:"2020-10-01T00:00:00.000Z",actor:null},{type:"commitsPushed",date:"2020-09-02T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/88e506ac92e35861c1218408ab7fda79b19054f1",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/88e506ac92e35861c1218408ab7fda79b19054f1",headline:"GetTaggedMember[Field]Name",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/fee5ca3a1112d49105d717e4ec4e1e36e36986a9",headline:"__[Tagged]Member[Field]",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/0f5d7cc0bd1d31adbf6e94c38b400af95cf806ba",headline:"TAGGED_MEMBER_[FIELD_]DEFINITION",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/94a67b73a26136011cca25f8918996603c7f5a1e",headline:"TaggedMember[Field]Definition/TaggedMember[Field]sDefinition",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/f66e237789e560998086b95b16febbcc09b39cec",headline:"taggedMember[Field]Name",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/e3082583524e64951d48b751809e56172e267e87",headline:"Fix definition ordering",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/6fa34c2ba628bee89306eaf4ed1a82b08d2344c3",headline:"Members -> member fields",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/4bf67b417db45f9cf805f3003c5c8509294e3667",headline:"Grammar",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/5afea0bd83145b4de07e9b10c040bcd4032d6cc9",headline:"Fix incorrect capital",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:"2020-09-01T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/c31ddc404ba6f07f6676988afcdc0641715c007b",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/c31ddc404ba6f07f6676988afcdc0641715c007b",headline:"Merge branch 'master' into tagged-type",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/55feb1cab004c9c38da0aeaae4f4b4349d111b5b",headline:"Move TaggedMemberDefinition",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/f786f1c52b2327b3c4d67eee9d9e5b111110383b",headline:"Add TAGGED_MEMBER_DEFINITION directive location",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/5906cd06540c74071aa8036145c5efd34821d48f",headline:"Reorder so tagged types comes after interfaces/unions",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/bd88e51653d97769aea8ef49583b3b739029b09c",headline:"Edit out comma that snuck in",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/514bb7271a56fe4d1e5ad683fde82ecfb2c54c61",headline:"Add word 'concrete'",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/4768d8dbe7d08913a29fefdf93a31a84e80e94de",headline:"Define member field",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/95ccf953196c5ac4c3600452b3d0b1d0527c201a",headline:"Add Lee's note",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/88f983b3855bd0099769b036ed5fe2fbfdf78054",headline:"Lee's rewording",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/a6486ce68b5f81c34cd48940c7766c6afdfc31a0",headline:"Add mutually exclusive tagged type example with distinct types",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/cf8d7a6711bfdca134227e1efec91017ca2d4357",headline:"Make it clear Tagged type fields can be of any type.",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/a09b30a98c990bfcb3bb43449fbf73fee3920ee9",headline:"s/objects/results",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/c81ebb1f600c4000356e3dace0f2996d43a256e0",headline:":",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/5dcb81bcda794e3e8d2ea3b5e7623147e98cf423",headline:"Checking for one key is easier than validating the given keys (maybe)",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/71ca89219cd3a26a552514f4dcbe8ef07b29ad49",headline:"nit",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/ce213bbd18eb0e5dcc2df21f9bd3666a1e351440",headline:"Allow @deprecated on TAGGED_MEMBER_DEFINITION",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/7ac75324f0d33e71b7e1c9d5a8d2e23158a366a1",headline:"Reword note on tagged member deprecation",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/0ae9ba8d1e1373e6805831cb12ff68b44b25d90a",headline:"Add note that added members must not make the tagged type invalid",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/361a235dfe5c85df07e1a4d4fd953f1230d087be",headline:"Fix case",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/a1705b5b1e6c158513d3de841585974d73e920c1",headline:"Remove duplicate",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/8807c1c3b6ec21f0eee7d59213a43e068d159105",headline:"Reword to follow Lee's example",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/61b7b8f506d05a4db05dafa9130d4a32c2183aaa",headline:"Reposition TAGGED to always be between Union and Enum.",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/285673a5ab4fbf20ed87b6af929d95b6a4113f0c",headline:"Terran -> Earthling",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/d9820c43b62067b9eef36efc79ebfcd44778365b",headline:"Make header consistent",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/f91d8ba6302ffb4cf107cc2c94c73695f1011b60",headline:"__Type represents all named types in the system",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/82151ba768e97b628570fe27b5b5bb180b373c99",headline:"Apply Lee's suggestion",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/02a2a93b1f640792cbfff7c45e287e34fa9f3f6b",headline:"Combine",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/5bdcc300ac87d1dead525bb11819a9fa8e536b05",headline:"Use 'field' rather than 'key'",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"wgAgenda",href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2020/2020-08-06.md",date:"2020-08-06T00:00:00.000Z",actor:null},{type:"wgNotes",href:"https://github.com/graphql/graphql-wg/blob/main/notes/2020/2020-08-06.md",date:"2020-08-06T00:00:00.000Z",actor:null},{type:"commitsPushed",date:"2020-07-21T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/a4c457899f3b8ae7a86a0d447f50d9eb07fc7d6b",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/a4c457899f3b8ae7a86a0d447f50d9eb07fc7d6b",headline:"Factor in review feedback from @spawnia",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:"2020-07-15T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/ceb81d586db61164b4e71bfb7532411d48463283",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/ceb81d586db61164b4e71bfb7532411d48463283",headline:"Merge branch 'master' into tagged-type",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/e65126dab0792f0593f379d852598407fb2f9f25",headline:"Sync type system",ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"commitsPushed",date:"2020-07-03T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/a73d1cc37a55f7cee6c762c99e2c9df201e4e6f0",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/a73d1cc37a55f7cee6c762c99e2c9df201e4e6f0",headline:'Change tagged "fields" to "members"',ghUser:"benjie",authorName:"Benjie Gillam"}]},{type:"prCreated",date:"2020-06-12T16:54:57.000Z",href:"https://github.com/graphql/graphql-spec/pull/733",actor:"benjie"},{type:"commitsPushed",date:"2020-06-12T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/3d43179e070d56e534da0f019ef42ef6202805e9",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/3d43179e070d56e534da0f019ef42ef6202805e9",headline:"First pass",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/d411b60e2df85f6599a8ded63028ba3938cc1db7",headline:"More edits",ghUser:"benjie",authorName:"Benjie Gillam"},{href:"https://github.com/graphql/graphql-spec/commit/16de65758742a7e4cdd9d5b0c7af1743cc6dcc68",headline:"Input coercion",ghUser:"benjie",authorName:"Benjie Gillam"}]}],related:"586, 825, InputUnion, SchemaCoordinates, wg1071",shortname:"Tagged type",image:"/img/rfc_tracker.png",closedAt:"2024-07-01T16:26:54.000Z",nextStage:!1},sidebar:"rfcsSidebar",previous:{title:"Relax SameResponseShape algorithm to be compatible with covariant fields",permalink:"/rfcs/883"},next:{title:"__typename should be valid at subscription root",permalink:"/rfcs/806"}},l={},s=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2},{value:"Tagged vs Union for output",id:"tagged-vs-union-for-output",level:2},{value:"Nullability",id:"nullability",level:2},{value:"FAQ",id:"faq",level:2},{value:"Can a tagged type be part of a union?",id:"can-a-tagged-type-be-part-of-a-union",level:3},{value:"Can a tagged type implement an interface?",id:"can-a-tagged-type-implement-an-interface",level:3},{value:"What does <code>__typename</code> return?",id:"what-does-__typename-return",level:3},{value:"What happens if I don&#39;t request the relevant tagged member?",id:"what-happens-if-i-dont-request-the-relevant-tagged-member",level:3},{value:"How can I determine which field would have been returned without specifying all fields?",id:"how-can-i-determine-which-field-would-have-been-returned-without-specifying-all-fields",level:3},{value:"Open questions",id:"open-questions",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,h.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Identifier"}),": #733"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Stage"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-x-rejected",children:"RFCX: Rejected"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Champion"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"PR"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/733",children:"Tagged type"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Related"}),":","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/rfcs/586",title:"Input Objects accepting exactly @oneField / RFCS",children:"#586"})," (Input Objects accepting exactly @oneField)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/rfcs/825",title:"OneOf Input Objects / RFC3",children:"#825"})," (OneOf Input Objects)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/rfcs/InputUnion",title:"GraphQL Input Union / RFC0",children:"InputUnion"})," (GraphQL Input Union)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/rfcs/SchemaCoordinates",title:"Schema Coordinates / RFC0",children:"SchemaCoordinates"})," (Schema Coordinates)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/rfcs/wg1071",title:"Struct type / RFC0",children:"wg#1071"})," (Struct type)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"timeline",children:"Timeline"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/ced63be93178f0c76baf93b5dbc05789f170d8f1",children:"Separate input and output tagged types"})," on 2021-01-21 by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsxs)(t.strong,{children:["Added to ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2020/2020-10-01.md",children:"2020-10-01 WG agenda"})]})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsxs)(t.strong,{children:["Mentioned in ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2020/2020-10-01.md",children:"2020-10-01 WG notes"})]})}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"9 commits pushed"})," on 2020-09-02:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/88e506ac92e35861c1218408ab7fda79b19054f1",children:"GetTaggedMember[Field]Name"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/fee5ca3a1112d49105d717e4ec4e1e36e36986a9",children:"__[Tagged]Member[Field]"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/0f5d7cc0bd1d31adbf6e94c38b400af95cf806ba",children:"TAGGED_MEMBER_[FIELD_]DEFINITION"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/94a67b73a26136011cca25f8918996603c7f5a1e",children:"TaggedMember[Field]Definition/TaggedMember[Field]sDefinition"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/f66e237789e560998086b95b16febbcc09b39cec",children:"taggedMember[Field]Name"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/e3082583524e64951d48b751809e56172e267e87",children:"Fix definition ordering"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/6fa34c2ba628bee89306eaf4ed1a82b08d2344c3",children:"Members -> member fields"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/4bf67b417db45f9cf805f3003c5c8509294e3667",children:"Grammar"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/5afea0bd83145b4de07e9b10c040bcd4032d6cc9",children:"Fix incorrect capital"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"28 commits pushed"})," on 2020-09-01:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/c31ddc404ba6f07f6676988afcdc0641715c007b",children:"Merge branch 'master' into tagged-type"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/55feb1cab004c9c38da0aeaae4f4b4349d111b5b",children:"Move TaggedMemberDefinition"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/f786f1c52b2327b3c4d67eee9d9e5b111110383b",children:"Add TAGGED_MEMBER_DEFINITION directive location"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/5906cd06540c74071aa8036145c5efd34821d48f",children:"Reorder so tagged types comes after interfaces/unions"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/bd88e51653d97769aea8ef49583b3b739029b09c",children:"Edit out comma that snuck in"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/514bb7271a56fe4d1e5ad683fde82ecfb2c54c61",children:"Add word 'concrete'"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/4768d8dbe7d08913a29fefdf93a31a84e80e94de",children:"Define member field"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/95ccf953196c5ac4c3600452b3d0b1d0527c201a",children:"Add Lee's note"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/88f983b3855bd0099769b036ed5fe2fbfdf78054",children:"Lee's rewording"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/a6486ce68b5f81c34cd48940c7766c6afdfc31a0",children:"Add mutually exclusive tagged type example with distinct types"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/cf8d7a6711bfdca134227e1efec91017ca2d4357",children:"Make it clear Tagged type fields can be of any type."})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/a09b30a98c990bfcb3bb43449fbf73fee3920ee9",children:"s/objects/results"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/c81ebb1f600c4000356e3dace0f2996d43a256e0",children:":"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/5dcb81bcda794e3e8d2ea3b5e7623147e98cf423",children:"Checking for one key is easier than validating the given keys (maybe)"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/71ca89219cd3a26a552514f4dcbe8ef07b29ad49",children:"nit"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/ce213bbd18eb0e5dcc2df21f9bd3666a1e351440",children:"Allow @deprecated on TAGGED_MEMBER_DEFINITION"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/7ac75324f0d33e71b7e1c9d5a8d2e23158a366a1",children:"Reword note on tagged member deprecation"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/0ae9ba8d1e1373e6805831cb12ff68b44b25d90a",children:"Add note that added members must not make the tagged type invalid"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/361a235dfe5c85df07e1a4d4fd953f1230d087be",children:"Fix case"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/a1705b5b1e6c158513d3de841585974d73e920c1",children:"Remove duplicate"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/8807c1c3b6ec21f0eee7d59213a43e068d159105",children:"Reword to follow Lee's example"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/61b7b8f506d05a4db05dafa9130d4a32c2183aaa",children:"Reposition TAGGED to always be between Union and Enum."})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/285673a5ab4fbf20ed87b6af929d95b6a4113f0c",children:"Terran -> Earthling"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/d9820c43b62067b9eef36efc79ebfcd44778365b",children:"Make header consistent"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/f91d8ba6302ffb4cf107cc2c94c73695f1011b60",children:"__Type represents all named types in the system"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/82151ba768e97b628570fe27b5b5bb180b373c99",children:"Apply Lee's suggestion"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/02a2a93b1f640792cbfff7c45e287e34fa9f3f6b",children:"Combine"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/5bdcc300ac87d1dead525bb11819a9fa8e536b05",children:"Use 'field' rather than 'key'"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsxs)(t.strong,{children:["Added to ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/agendas/2020/2020-08-06.md",children:"2020-08-06 WG agenda"})]})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsxs)(t.strong,{children:["Mentioned in ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-wg/blob/main/notes/2020/2020-08-06.md",children:"2020-08-06 WG notes"})]})}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/a4c457899f3b8ae7a86a0d447f50d9eb07fc7d6b",children:"Factor in review feedback from @spawnia"})," on 2020-07-21 by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"2 commits pushed"})," on 2020-07-15:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/ceb81d586db61164b4e71bfb7532411d48463283",children:"Merge branch 'master' into tagged-type"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/e65126dab0792f0593f379d852598407fb2f9f25",children:"Sync type system"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Commit pushed"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/a73d1cc37a55f7cee6c762c99e2c9df201e4e6f0",children:'Change tagged "fields" to "members"'})," on 2020-07-03 by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/733",children:"Spec PR"})," created"]})," on 2020-06-12 by benjie"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"3 commits pushed"})," on 2020-06-12:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/3d43179e070d56e534da0f019ef42ef6202805e9",children:"First pass"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/d411b60e2df85f6599a8ded63028ba3938cc1db7",children:"More edits"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/commit/16de65758742a7e4cdd9d5b0c7af1743cc6dcc68",children:"Input coercion"})," by ",(0,i.jsx)(t.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"THIS RFC HAS BEEN SUPERSEDED"})," by ",(0,i.jsx)(t.code,{children:"@oneof"}),", for now at least... See: ",(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/825",children:"https://github.com/graphql/graphql-spec/pull/825"})]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.p,{children:['This is an RFC for a new "Tagged type" to be added to GraphQL. It replaces the ',(0,i.jsx)(t.a,{href:"https://github.com/graphql/graphql-spec/pull/586",children:'"@oneField directive"'}),' proposal following feedback from the Input Unions Working Group. Please note that "Tagged type" is the working name, and may change if we come up with a better name for it.']}),"\n",(0,i.jsx)(t.p,{children:"A Tagged type defines a list of named members each with an associated type (like the fields in Object types and Input Object types), but differs from Object types and Input Object types in that exactly one of those members must be present."}),"\n",(0,i.jsxs)(t.p,{children:["The aim of the Tagged type is to introduce a form of polymorphism in GraphQL that can be symmetric between input and output. In output, it can generally be used as an alternative to Union (the differences will be outlined below). It goes beyond interfaces and unions in that it allows the same type to be specified more than once, which is particularly useful to represent filters such as this pseudocode ",(0,i.jsx)(t.code,{children:"{greaterThan: Int} | {lessThan: Int}"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["If merged, Tagged would be the first non-leaf type kind (i.e. not a Scalar, not an Enum) that ",(0,i.jsx)(t.em,{children:"could"})," be valid in both input and output. It is also the first kind of type where types of that kind may have different input/output suitability."]}),"\n",(0,i.jsx)(t.p,{children:"In SDL, a tagged type could look like one of these:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"# suitable for input and output:\ntagged StringFilter {\n  contains: String!\n  lengthAtLeast: Int!\n  lengthAtMost: Int!\n}\n\n# output only:\ntagged Pet {\n  cat: Cat!\n  dog: Dog!\n  colony: ColonyType!\n}\n\n# input only:\ntagged PetInput {\n  cat: CatInput!\n  dog: DogInput!\n  colony: ColonyType!\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["(Note a ",(0,i.jsx)(t.a,{href:"https://gist.github.com/benjie/e45540ad25ce9c33c2a1552da38adb91",children:"number of alternative syntaxes"})," were mooted by the Input Unions working group; the one above was chosen to be the preferred syntax.)"]}),"\n",(0,i.jsxs)(t.p,{children:["If we queried a ",(0,i.jsx)(t.code,{children:"StringFilter"})," with the following selection set:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"{\n  contains\n  lengthAtLeast\n  lengthAtMost\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"then this could yield one of the following objects:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:'{ "contains": "Awesome" }'})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:'{ "lengthAtLeast": 3 }'})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:'{ "lengthAtMost": 42 }'})}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Note that each of these objects specify exactly one key."}),"\n",(0,i.jsxs)(t.p,{children:["Similarly the above JSON objects would be valid input values for the ",(0,i.jsx)(t.code,{children:"StringFilter"})," where it was used as an input."]}),"\n",(0,i.jsx)(t.h2,{id:"tagged-vs-union-for-output",children:"Tagged vs Union for output"}),"\n",(0,i.jsx)(t.p,{children:"Tagged does not replace Union; there are things that Union can do that tagged cannot:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"{\n  myUnionField {\n    ... on Node {\n      id # If the concrete type returned by `myUnionField` implements\n         # the `Node` interface, we can query `id`.\n    }\n  }\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"And things that Tagged can do that Union cannot:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"tagged Filter {\n  equalTo: Int!\n  lessThan: Int!\n  greaterThan: Int!\n  isNull: Boolean!\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"Tagged allows for exploring the various polymorphic outputs without requiring fragments:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"{\n  pets {\n    cat { name numberOfLives }\n    dog { name breed }\n    parrot { name favouritePhrase }\n  }\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"When carefully designed and queried, the data output by a tagged output could also be usable as input to another (or the same, if it's suitable for both input and output) tagged input, giving polymorphic symmetry to your schema."}),"\n",(0,i.jsx)(t.h2,{id:"nullability",children:"Nullability"}),"\n",(0,i.jsx)(t.p,{children:"Tagged is designed in the way that it is so that it may leverage the existing field logic relating to nullability and errors. In particular, if you had a schema such as:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"type Query {\n  pets: [Pet]\n}\n\ntagged Pet {\n  cat: Cat\n  dog: Dog\n}\n\ntype Cat {\n  id: ID!\n  name: String!\n  numberOfLives: Int\n}\n\ntype Dog {\n  id: ID!\n  name: String!\n  breed: String\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"and you issued the following query:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"{\n  pets {\n    cat { id name numberOfLives }\n    dog { id name breed }\n  }\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["and for some reason the ",(0,i.jsx)(t.code,{children:"name"})," field on Cat were to throw, the the result might come out as:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "data": {\n    "pets": [\n      { "cat": null },\n      { "dog": { "id": "BUSTER", "name": "Buster" } }\n    ]\n  },\n  "errors": [{ ... }]\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["where we can tell an error occurred and the result would have been a ",(0,i.jsx)(t.code,{children:"Cat"})," but something went wrong. This may potentially be useful, particularly for debugging, compared to returning ",(0,i.jsx)(t.code,{children:'"pets": null'})," or ",(0,i.jsx)(t.code,{children:'"pets": [null, {"dog": {...}}]'}),". It also makes implementation easier because it's the same algorithm as for object field return types."]}),"\n",(0,i.jsx)(t.h2,{id:"faq",children:"FAQ"}),"\n",(0,i.jsx)(t.h3,{id:"can-a-tagged-type-be-part-of-a-union",children:"Can a tagged type be part of a union?"}),"\n",(0,i.jsx)(t.p,{children:"Not as currently specified."}),"\n",(0,i.jsx)(t.h3,{id:"can-a-tagged-type-implement-an-interface",children:"Can a tagged type implement an interface?"}),"\n",(0,i.jsx)(t.p,{children:"No."}),"\n",(0,i.jsxs)(t.h3,{id:"what-does-__typename-return",children:["What does ",(0,i.jsx)(t.code,{children:"__typename"})," return?"]}),"\n",(0,i.jsxs)(t.p,{children:["It returns the name of the tagged type. (This is a new behaviour, previously ",(0,i.jsx)(t.code,{children:"__typename"})," would always return the name of an object type, but now we have two concrete composite output types.)"]}),"\n",(0,i.jsx)(t.h3,{id:"what-happens-if-i-dont-request-the-relevant-tagged-member",children:"What happens if I don't request the relevant tagged member?"}),"\n",(0,i.jsxs)(t.p,{children:["You'll receive an empty object. For example if you issue the selection set ",(0,i.jsx)(t.code,{children:"{ cat }"})," against the tagged type below, but the result is a dog, you'll receive ",(0,i.jsx)(t.code,{children:"{}"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"tagged Animal {\n  cat: Cat\n  dog: Dog\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"how-can-i-determine-which-field-would-have-been-returned-without-specifying-all-fields",children:"How can I determine which field would have been returned without specifying all fields?"}),"\n",(0,i.jsxs)(t.p,{children:["There is currently no way of finding out what the field ",(0,i.jsx)(t.em,{children:"should have been"})," other than querying every field; however there's room to solve this later with an introspection field like ",(0,i.jsx)(t.code,{children:"__typename"})," (e.g. ",(0,i.jsx)(t.code,{children:"__membername"}),") should this show sufficient utility."]}),"\n",(0,i.jsx)(t.h2,{id:"open-questions",children:"Open questions"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Should we add ",(0,i.jsx)(t.code,{children:"isInputType"})," / ",(0,i.jsx)(t.code,{children:"isOutputType"})," to ",(0,i.jsx)(t.code,{children:"__Type"})," for introspection? [Author opinion: separate RFC.]"]}),"\n",(0,i.jsxs)(t.li,{children:["Should we use ",(0,i.jsx)(t.code,{children:"TAGGED_INPUT"})," and ",(0,i.jsx)(t.code,{children:"TAGGED_OUTPUT"})," types separately, rather than sharing just one type? [Author opinion: no.]"]}),"\n",(0,i.jsx)(t.li,{children:"Should we prevent field aliases? [Author opinion: no.]"}),"\n",(0,i.jsxs)(t.li,{children:["What exactly should the input coercion rules be, particularly around variables being omitted, e.g. ",(0,i.jsx)(t.code,{children:"{a: $a, b: $b}"})," [Author opinion: as currently specified.]"]}),"\n"]}),"\n"]})]})}function o(e={}){const{wrapper:t}={...(0,h.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>r,a:()=>c});var i=a(7294);const h={},n=i.createContext(h);function c(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(h):e.components||h:c(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);