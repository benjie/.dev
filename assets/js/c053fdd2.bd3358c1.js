"use strict";(self.webpackChunk_localrepo_benjie_dev=self.webpackChunk_localrepo_benjie_dev||[]).push([[4728],{3725:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>h});var s=t(5893),n=t(1151);const i={identifier:"1126",closedAt:new Date("2024-11-21T15:14:32.000Z"),mergedAt:null,title:"GraphQL Subscriptions should handle errors in the source stream",stage:"0",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1126",events:[{type:"prCreated",date:new Date("2024-11-21T14:54:13.000Z"),href:"https://github.com/graphql/graphql-spec/pull/1126",actor:"benjie"},{type:"commitsPushed",date:new Date("2024-11-21T00:00:00.000Z"),href:"https://github.com/graphql/graphql-spec/commit/d36099a3386d571e4f034ee3c0b658564f4a61e9",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/d36099a3386d571e4f034ee3c0b658564f4a61e9",headline:"Handle errors raised by sourceStream",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"GraphQL Subscriptions should handle errors in the source stream",image:"/img/rfc_tracker.png"},a=void 0,l={id:"1126",title:"GraphQL Subscriptions should handle errors in the source stream",description:"At a glance",source:"@site/rfcs/1126.md",sourceDirName:".",slug:"/1126",permalink:"/rfcs/1126",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{identifier:"1126",closedAt:"2024-11-21T15:14:32.000Z",mergedAt:null,title:"GraphQL Subscriptions should handle errors in the source stream",stage:"0",champion:"benjie",prUrl:"https://github.com/graphql/graphql-spec/pull/1126",events:[{type:"prCreated",date:"2024-11-21T14:54:13.000Z",href:"https://github.com/graphql/graphql-spec/pull/1126",actor:"benjie"},{type:"commitsPushed",date:"2024-11-21T00:00:00.000Z",href:"https://github.com/graphql/graphql-spec/commit/d36099a3386d571e4f034ee3c0b658564f4a61e9",actor:"benjie",commits:[{href:"https://github.com/graphql/graphql-spec/commit/d36099a3386d571e4f034ee3c0b658564f4a61e9",headline:"Handle errors raised by sourceStream",ghUser:"benjie",authorName:"Benjie Gillam"}]}],shortname:"GraphQL Subscriptions should handle errors in the source stream",image:"/img/rfc_tracker.png"},sidebar:"rfcsSidebar",previous:{title:"Exclude custom scalar literals from validation",permalink:"/rfcs/1157"},next:{title:"deduplicated incremental delivery",permalink:"/rfcs/1052"}},c={},h=[{value:"At a glance",id:"at-a-glance",level:2},{value:"Timeline",id:"timeline",level:2}];function o(e){const r={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Identifier"}),": #1126"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Stage"}),": ",(0,s.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/blob/main/CONTRIBUTING.md#stage-x-rejected",children:"RFCX: Closed"})," 2024-11-21T15:14:32Z"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Champion"}),": ",(0,s.jsx)(r.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"PR"}),": ",(0,s.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/pull/1126",children:"GraphQL Subscriptions should handle errors in the source stream"})]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"timeline",children:"Timeline"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsxs)(r.strong,{children:[(0,s.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/pull/1126",children:"Spec PR"})," created"]})," on 2024-11-21 by benjie"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Commit pushed"}),": ",(0,s.jsx)(r.a,{href:"https://github.com/graphql/graphql-spec/commit/d36099a3386d571e4f034ee3c0b658564f4a61e9",children:"Handle errors raised by sourceStream"})," on 2024-11-21 by ",(0,s.jsx)(r.a,{href:"https://github.com/benjie",children:"@benjie"})]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:["Currently if ",(0,s.jsx)(r.code,{children:"sourceStream"})," generates an error, then ",(0,s.jsx)(r.code,{children:"responseStream"})," repeats the error. This is the behavior implemented in graphql-js and ",(0,s.jsx)(r.a,{href:"https://github.com/graphql/graphql-js/issues/4001",children:"is problematic"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["GraphQL captures execution errors and wraps them in an ",(0,s.jsx)(r.code,{children:"{ errors: [...] }"})," payload for query and mutation operations; it should do the same for stream errors in a subscription operation."]}),"\n",(0,s.jsx)(r.p,{children:"This PR makes this behavior explicit."}),"\n"]})]})}function p(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},1151:(e,r,t)=>{t.d(r,{Z:()=>l,a:()=>a});var s=t(7294);const n={},i=s.createContext(n);function a(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);